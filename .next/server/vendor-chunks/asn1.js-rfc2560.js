"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/asn1.js-rfc2560";
exports.ids = ["vendor-chunks/asn1.js-rfc2560"];
exports.modules = {

/***/ "(rsc)/./node_modules/asn1.js-rfc2560/index.js":
/*!***********************************************!*\
  !*** ./node_modules/asn1.js-rfc2560/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst asn1 = __webpack_require__(/*! asn1.js */ \"(rsc)/./node_modules/asn1.js/lib/asn1.js\");\nconst rfc5280 = __webpack_require__(/*! asn1.js-rfc5280 */ \"(rsc)/./node_modules/asn1.js-rfc5280/index.js\");\n\nconst OCSPRequest = asn1.define('OCSPRequest', function() {\n  this.seq().obj(\n    this.key('tbsRequest').use(TBSRequest),\n    this.key('optionalSignature').optional().explicit(0).use(Signature)\n  );\n});\nexports.OCSPRequest = OCSPRequest;\n\nconst TBSRequest = asn1.define('TBSRequest', function() {\n  this.seq().obj(\n    this.key('version').def('v1').explicit(0).use(rfc5280.Version),\n    this.key('requestorName').optional().explicit(1).use(rfc5280.GeneralName),\n    this.key('requestList').seqof(Request),\n    this.key('requestExtensions').optional().explicit(2)\n      .seqof(rfc5280.Extension)\n  );\n});\nexports.TBSRequest = TBSRequest;\n\nconst Signature = asn1.define('Signature', function() {\n  this.seq().obj(\n    this.key('signatureAlgorithm').use(rfc5280.AlgorithmIdentifier),\n    this.key('signature').bitstr(),\n    this.key('certs').optional().explicit(0).seqof(rfc5280.Certificate)\n  );\n});\nexports.Signature = Signature;\n\nconst Request = asn1.define('Request', function() {\n  this.seq().obj(\n    this.key('reqCert').use(CertID),\n    this.key('singleRequestExtensions').optional().explicit(0).seqof(\n      rfc5280.Extension)\n  );\n});\nexports.Request = Request;\n\nconst OCSPResponse = asn1.define('OCSPResponse', function() {\n  this.seq().obj(\n    this.key('responseStatus').use(ResponseStatus),\n    this.key('responseBytes').optional().explicit(0).seq().obj(\n      this.key('responseType').objid({\n        '1 3 6 1 5 5 7 48 1 1': 'id-pkix-ocsp-basic'\n      }),\n      this.key('response').octstr()\n    )\n  );\n});\nexports.OCSPResponse = OCSPResponse;\n\nconst ResponseStatus = asn1.define('ResponseStatus', function() {\n  this.enum({\n    0: 'successful',\n    1: 'malformed_request',\n    2: 'internal_error',\n    3: 'try_later',\n    5: 'sig_required',\n    6: 'unauthorized'\n  });\n});\nexports.ResponseStatus = ResponseStatus;\n\nconst BasicOCSPResponse = asn1.define('BasicOCSPResponse', function() {\n  this.seq().obj(\n    this.key('tbsResponseData').use(ResponseData),\n    this.key('signatureAlgorithm').use(rfc5280.AlgorithmIdentifier),\n    this.key('signature').bitstr(),\n    this.key('certs').optional().explicit(0).seqof(rfc5280.Certificate)\n  );\n});\nexports.BasicOCSPResponse = BasicOCSPResponse;\n\nconst ResponseData = asn1.define('ResponseData', function() {\n  this.seq().obj(\n    this.key('version').def('v1').explicit(0).use(rfc5280.Version),\n    this.key('responderID').use(ResponderID),\n    this.key('producedAt').gentime(),\n    this.key('responses').seqof(SingleResponse),\n    this.key('responseExtensions').optional().explicit(1)\n      .seqof(rfc5280.Extension)\n  );\n});\nexports.ResponseData = ResponseData;\n\nconst ResponderID = asn1.define('ResponderId', function() {\n  this.choice({\n    byName: this.explicit(1).use(rfc5280.Name),\n    byKey: this.explicit(2).use(KeyHash)\n  });\n});\nexports.ResponderID = ResponderID;\n\nconst KeyHash = asn1.define('KeyHash', function() {\n  this.octstr();\n});\nexports.KeyHash = KeyHash;\n\nconst SingleResponse = asn1.define('SingleResponse', function() {\n  this.seq().obj(\n    this.key('certId').use(CertID),\n    this.key('certStatus').use(CertStatus),\n    this.key('thisUpdate').gentime(),\n    this.key('nextUpdate').optional().explicit(0).gentime(),\n    this.key('singleExtensions').optional().explicit(1).seqof(rfc5280.Extension)\n  );\n});\nexports.SingleResponse = SingleResponse;\n\nconst CertStatus = asn1.define('CertStatus', function() {\n  this.choice({\n    good: this.implicit(0).null_(),\n    revoked: this.implicit(1).use(RevokedInfo),\n    unknown: this.implicit(2).null_()\n  });\n});\nexports.CertStatus = CertStatus;\n\nconst RevokedInfo = asn1.define('RevokedInfo', function() {\n  this.seq().obj(\n    this.key('revocationTime').gentime(),\n    this.key('revocationReason').optional().explicit(0).use(rfc5280.ReasonCode)\n  );\n});\nexports.RevokedInfo = RevokedInfo;\n\nconst CertID = asn1.define('CertID', function() {\n  this.seq().obj(\n    this.key('hashAlgorithm').use(rfc5280.AlgorithmIdentifier),\n    this.key('issuerNameHash').octstr(),\n    this.key('issuerKeyHash').octstr(),\n    this.key('serialNumber').use(rfc5280.CertificateSerialNumber)\n  );\n});\nexports.CertID = CertID;\n\nconst Nonce = asn1.define('Nonce', function() {\n  this.octstr();\n});\nexports.Nonce = Nonce;\n\nexports[\"id-pkix-ocsp\"] = [ 1, 3, 6, 1, 5, 5, 7, 48, 1 ];\nexports[\"id-pkix-ocsp-nonce\"] = [ 1, 3, 6, 1, 5, 5, 7, 48, 1, 2 ];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXNuMS5qcy1yZmMyNTYwL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsbUJBQU8sQ0FBQyx5REFBUztBQUM5QixnQkFBZ0IsbUJBQU8sQ0FBQyxzRUFBaUI7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsbUJBQW1COztBQUVuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWU7O0FBRWY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7O0FBRXBCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELHNCQUFzQjs7QUFFdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QseUJBQXlCOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0JBQW9COztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsbUJBQW1COztBQUVuQjtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWU7O0FBRWY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxzQkFBc0I7O0FBRXRCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxtQkFBbUI7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGNBQWM7O0FBRWQ7QUFDQTtBQUNBLENBQUM7QUFDRCxhQUFhOztBQUViLHVCQUF1QjtBQUN2Qiw2QkFBNkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWN0b3J3aWxzb24vRGVza3RvcC9wcm9qZWN0cy9FWlZpei9ub2RlX21vZHVsZXMvYXNuMS5qcy1yZmMyNTYwL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgYXNuMSA9IHJlcXVpcmUoJ2FzbjEuanMnKTtcbmNvbnN0IHJmYzUyODAgPSByZXF1aXJlKCdhc24xLmpzLXJmYzUyODAnKTtcblxuY29uc3QgT0NTUFJlcXVlc3QgPSBhc24xLmRlZmluZSgnT0NTUFJlcXVlc3QnLCBmdW5jdGlvbigpIHtcbiAgdGhpcy5zZXEoKS5vYmooXG4gICAgdGhpcy5rZXkoJ3Ric1JlcXVlc3QnKS51c2UoVEJTUmVxdWVzdCksXG4gICAgdGhpcy5rZXkoJ29wdGlvbmFsU2lnbmF0dXJlJykub3B0aW9uYWwoKS5leHBsaWNpdCgwKS51c2UoU2lnbmF0dXJlKVxuICApO1xufSk7XG5leHBvcnRzLk9DU1BSZXF1ZXN0ID0gT0NTUFJlcXVlc3Q7XG5cbmNvbnN0IFRCU1JlcXVlc3QgPSBhc24xLmRlZmluZSgnVEJTUmVxdWVzdCcsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgndmVyc2lvbicpLmRlZigndjEnKS5leHBsaWNpdCgwKS51c2UocmZjNTI4MC5WZXJzaW9uKSxcbiAgICB0aGlzLmtleSgncmVxdWVzdG9yTmFtZScpLm9wdGlvbmFsKCkuZXhwbGljaXQoMSkudXNlKHJmYzUyODAuR2VuZXJhbE5hbWUpLFxuICAgIHRoaXMua2V5KCdyZXF1ZXN0TGlzdCcpLnNlcW9mKFJlcXVlc3QpLFxuICAgIHRoaXMua2V5KCdyZXF1ZXN0RXh0ZW5zaW9ucycpLm9wdGlvbmFsKCkuZXhwbGljaXQoMilcbiAgICAgIC5zZXFvZihyZmM1MjgwLkV4dGVuc2lvbilcbiAgKTtcbn0pO1xuZXhwb3J0cy5UQlNSZXF1ZXN0ID0gVEJTUmVxdWVzdDtcblxuY29uc3QgU2lnbmF0dXJlID0gYXNuMS5kZWZpbmUoJ1NpZ25hdHVyZScsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgnc2lnbmF0dXJlQWxnb3JpdGhtJykudXNlKHJmYzUyODAuQWxnb3JpdGhtSWRlbnRpZmllciksXG4gICAgdGhpcy5rZXkoJ3NpZ25hdHVyZScpLmJpdHN0cigpLFxuICAgIHRoaXMua2V5KCdjZXJ0cycpLm9wdGlvbmFsKCkuZXhwbGljaXQoMCkuc2Vxb2YocmZjNTI4MC5DZXJ0aWZpY2F0ZSlcbiAgKTtcbn0pO1xuZXhwb3J0cy5TaWduYXR1cmUgPSBTaWduYXR1cmU7XG5cbmNvbnN0IFJlcXVlc3QgPSBhc24xLmRlZmluZSgnUmVxdWVzdCcsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgncmVxQ2VydCcpLnVzZShDZXJ0SUQpLFxuICAgIHRoaXMua2V5KCdzaW5nbGVSZXF1ZXN0RXh0ZW5zaW9ucycpLm9wdGlvbmFsKCkuZXhwbGljaXQoMCkuc2Vxb2YoXG4gICAgICByZmM1MjgwLkV4dGVuc2lvbilcbiAgKTtcbn0pO1xuZXhwb3J0cy5SZXF1ZXN0ID0gUmVxdWVzdDtcblxuY29uc3QgT0NTUFJlc3BvbnNlID0gYXNuMS5kZWZpbmUoJ09DU1BSZXNwb25zZScsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgncmVzcG9uc2VTdGF0dXMnKS51c2UoUmVzcG9uc2VTdGF0dXMpLFxuICAgIHRoaXMua2V5KCdyZXNwb25zZUJ5dGVzJykub3B0aW9uYWwoKS5leHBsaWNpdCgwKS5zZXEoKS5vYmooXG4gICAgICB0aGlzLmtleSgncmVzcG9uc2VUeXBlJykub2JqaWQoe1xuICAgICAgICAnMSAzIDYgMSA1IDUgNyA0OCAxIDEnOiAnaWQtcGtpeC1vY3NwLWJhc2ljJ1xuICAgICAgfSksXG4gICAgICB0aGlzLmtleSgncmVzcG9uc2UnKS5vY3RzdHIoKVxuICAgIClcbiAgKTtcbn0pO1xuZXhwb3J0cy5PQ1NQUmVzcG9uc2UgPSBPQ1NQUmVzcG9uc2U7XG5cbmNvbnN0IFJlc3BvbnNlU3RhdHVzID0gYXNuMS5kZWZpbmUoJ1Jlc3BvbnNlU3RhdHVzJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuZW51bSh7XG4gICAgMDogJ3N1Y2Nlc3NmdWwnLFxuICAgIDE6ICdtYWxmb3JtZWRfcmVxdWVzdCcsXG4gICAgMjogJ2ludGVybmFsX2Vycm9yJyxcbiAgICAzOiAndHJ5X2xhdGVyJyxcbiAgICA1OiAnc2lnX3JlcXVpcmVkJyxcbiAgICA2OiAndW5hdXRob3JpemVkJ1xuICB9KTtcbn0pO1xuZXhwb3J0cy5SZXNwb25zZVN0YXR1cyA9IFJlc3BvbnNlU3RhdHVzO1xuXG5jb25zdCBCYXNpY09DU1BSZXNwb25zZSA9IGFzbjEuZGVmaW5lKCdCYXNpY09DU1BSZXNwb25zZScsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgndGJzUmVzcG9uc2VEYXRhJykudXNlKFJlc3BvbnNlRGF0YSksXG4gICAgdGhpcy5rZXkoJ3NpZ25hdHVyZUFsZ29yaXRobScpLnVzZShyZmM1MjgwLkFsZ29yaXRobUlkZW50aWZpZXIpLFxuICAgIHRoaXMua2V5KCdzaWduYXR1cmUnKS5iaXRzdHIoKSxcbiAgICB0aGlzLmtleSgnY2VydHMnKS5vcHRpb25hbCgpLmV4cGxpY2l0KDApLnNlcW9mKHJmYzUyODAuQ2VydGlmaWNhdGUpXG4gICk7XG59KTtcbmV4cG9ydHMuQmFzaWNPQ1NQUmVzcG9uc2UgPSBCYXNpY09DU1BSZXNwb25zZTtcblxuY29uc3QgUmVzcG9uc2VEYXRhID0gYXNuMS5kZWZpbmUoJ1Jlc3BvbnNlRGF0YScsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgndmVyc2lvbicpLmRlZigndjEnKS5leHBsaWNpdCgwKS51c2UocmZjNTI4MC5WZXJzaW9uKSxcbiAgICB0aGlzLmtleSgncmVzcG9uZGVySUQnKS51c2UoUmVzcG9uZGVySUQpLFxuICAgIHRoaXMua2V5KCdwcm9kdWNlZEF0JykuZ2VudGltZSgpLFxuICAgIHRoaXMua2V5KCdyZXNwb25zZXMnKS5zZXFvZihTaW5nbGVSZXNwb25zZSksXG4gICAgdGhpcy5rZXkoJ3Jlc3BvbnNlRXh0ZW5zaW9ucycpLm9wdGlvbmFsKCkuZXhwbGljaXQoMSlcbiAgICAgIC5zZXFvZihyZmM1MjgwLkV4dGVuc2lvbilcbiAgKTtcbn0pO1xuZXhwb3J0cy5SZXNwb25zZURhdGEgPSBSZXNwb25zZURhdGE7XG5cbmNvbnN0IFJlc3BvbmRlcklEID0gYXNuMS5kZWZpbmUoJ1Jlc3BvbmRlcklkJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuY2hvaWNlKHtcbiAgICBieU5hbWU6IHRoaXMuZXhwbGljaXQoMSkudXNlKHJmYzUyODAuTmFtZSksXG4gICAgYnlLZXk6IHRoaXMuZXhwbGljaXQoMikudXNlKEtleUhhc2gpXG4gIH0pO1xufSk7XG5leHBvcnRzLlJlc3BvbmRlcklEID0gUmVzcG9uZGVySUQ7XG5cbmNvbnN0IEtleUhhc2ggPSBhc24xLmRlZmluZSgnS2V5SGFzaCcsIGZ1bmN0aW9uKCkge1xuICB0aGlzLm9jdHN0cigpO1xufSk7XG5leHBvcnRzLktleUhhc2ggPSBLZXlIYXNoO1xuXG5jb25zdCBTaW5nbGVSZXNwb25zZSA9IGFzbjEuZGVmaW5lKCdTaW5nbGVSZXNwb25zZScsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgnY2VydElkJykudXNlKENlcnRJRCksXG4gICAgdGhpcy5rZXkoJ2NlcnRTdGF0dXMnKS51c2UoQ2VydFN0YXR1cyksXG4gICAgdGhpcy5rZXkoJ3RoaXNVcGRhdGUnKS5nZW50aW1lKCksXG4gICAgdGhpcy5rZXkoJ25leHRVcGRhdGUnKS5vcHRpb25hbCgpLmV4cGxpY2l0KDApLmdlbnRpbWUoKSxcbiAgICB0aGlzLmtleSgnc2luZ2xlRXh0ZW5zaW9ucycpLm9wdGlvbmFsKCkuZXhwbGljaXQoMSkuc2Vxb2YocmZjNTI4MC5FeHRlbnNpb24pXG4gICk7XG59KTtcbmV4cG9ydHMuU2luZ2xlUmVzcG9uc2UgPSBTaW5nbGVSZXNwb25zZTtcblxuY29uc3QgQ2VydFN0YXR1cyA9IGFzbjEuZGVmaW5lKCdDZXJ0U3RhdHVzJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuY2hvaWNlKHtcbiAgICBnb29kOiB0aGlzLmltcGxpY2l0KDApLm51bGxfKCksXG4gICAgcmV2b2tlZDogdGhpcy5pbXBsaWNpdCgxKS51c2UoUmV2b2tlZEluZm8pLFxuICAgIHVua25vd246IHRoaXMuaW1wbGljaXQoMikubnVsbF8oKVxuICB9KTtcbn0pO1xuZXhwb3J0cy5DZXJ0U3RhdHVzID0gQ2VydFN0YXR1cztcblxuY29uc3QgUmV2b2tlZEluZm8gPSBhc24xLmRlZmluZSgnUmV2b2tlZEluZm8nLCBmdW5jdGlvbigpIHtcbiAgdGhpcy5zZXEoKS5vYmooXG4gICAgdGhpcy5rZXkoJ3Jldm9jYXRpb25UaW1lJykuZ2VudGltZSgpLFxuICAgIHRoaXMua2V5KCdyZXZvY2F0aW9uUmVhc29uJykub3B0aW9uYWwoKS5leHBsaWNpdCgwKS51c2UocmZjNTI4MC5SZWFzb25Db2RlKVxuICApO1xufSk7XG5leHBvcnRzLlJldm9rZWRJbmZvID0gUmV2b2tlZEluZm87XG5cbmNvbnN0IENlcnRJRCA9IGFzbjEuZGVmaW5lKCdDZXJ0SUQnLCBmdW5jdGlvbigpIHtcbiAgdGhpcy5zZXEoKS5vYmooXG4gICAgdGhpcy5rZXkoJ2hhc2hBbGdvcml0aG0nKS51c2UocmZjNTI4MC5BbGdvcml0aG1JZGVudGlmaWVyKSxcbiAgICB0aGlzLmtleSgnaXNzdWVyTmFtZUhhc2gnKS5vY3RzdHIoKSxcbiAgICB0aGlzLmtleSgnaXNzdWVyS2V5SGFzaCcpLm9jdHN0cigpLFxuICAgIHRoaXMua2V5KCdzZXJpYWxOdW1iZXInKS51c2UocmZjNTI4MC5DZXJ0aWZpY2F0ZVNlcmlhbE51bWJlcilcbiAgKTtcbn0pO1xuZXhwb3J0cy5DZXJ0SUQgPSBDZXJ0SUQ7XG5cbmNvbnN0IE5vbmNlID0gYXNuMS5kZWZpbmUoJ05vbmNlJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMub2N0c3RyKCk7XG59KTtcbmV4cG9ydHMuTm9uY2UgPSBOb25jZTtcblxuZXhwb3J0c1snaWQtcGtpeC1vY3NwJ10gPSBbIDEsIDMsIDYsIDEsIDUsIDUsIDcsIDQ4LCAxIF07XG5leHBvcnRzWydpZC1wa2l4LW9jc3Atbm9uY2UnXSA9IFsgMSwgMywgNiwgMSwgNSwgNSwgNywgNDgsIDEsIDIgXTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/asn1.js-rfc2560/index.js\n");

/***/ })

};
;