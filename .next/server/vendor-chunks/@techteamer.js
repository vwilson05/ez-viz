/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@techteamer";
exports.ids = ["vendor-chunks/@techteamer"];
exports.modules = {

/***/ "(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp.js":
/*!***************************************************!*\
  !*** ./node_modules/@techteamer/ocsp/lib/ocsp.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.Cache = __webpack_require__(/*! ./ocsp/cache */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/cache.js\")\nexports.Agent = __webpack_require__(/*! ./ocsp/agent */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/agent.js\")\nexports.Server = __webpack_require__(/*! ./ocsp/server */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/server.js\")\n\nexports.getOCSPURI = __webpack_require__(/*! ./ocsp/api */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/api.js\").getOCSPURI\n\nexports.request = __webpack_require__(/*! ./ocsp/request */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/request.js\")\nexports.check = __webpack_require__(/*! ./ocsp/check */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/check.js\")\nexports.verify = __webpack_require__(/*! ./ocsp/verify */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/verify.js\")\nexports.utils = __webpack_require__(/*! ./ocsp/utils */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/utils.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrSEFBdUM7QUFDdkMsa0hBQXVDO0FBQ3ZDLHFIQUF5Qzs7QUFFekMsOEhBQXFEOztBQUVyRCx3SEFBMkM7QUFDM0Msa0hBQXVDO0FBQ3ZDLHFIQUF5QztBQUN6QyxrSEFBdUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWN0b3J3aWxzb24vRGVza3RvcC9wcm9qZWN0cy9FWlZpei9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLkNhY2hlID0gcmVxdWlyZSgnLi9vY3NwL2NhY2hlJylcbmV4cG9ydHMuQWdlbnQgPSByZXF1aXJlKCcuL29jc3AvYWdlbnQnKVxuZXhwb3J0cy5TZXJ2ZXIgPSByZXF1aXJlKCcuL29jc3Avc2VydmVyJylcblxuZXhwb3J0cy5nZXRPQ1NQVVJJID0gcmVxdWlyZSgnLi9vY3NwL2FwaScpLmdldE9DU1BVUklcblxuZXhwb3J0cy5yZXF1ZXN0ID0gcmVxdWlyZSgnLi9vY3NwL3JlcXVlc3QnKVxuZXhwb3J0cy5jaGVjayA9IHJlcXVpcmUoJy4vb2NzcC9jaGVjaycpXG5leHBvcnRzLnZlcmlmeSA9IHJlcXVpcmUoJy4vb2NzcC92ZXJpZnknKVxuZXhwb3J0cy51dGlscyA9IHJlcXVpcmUoJy4vb2NzcC91dGlscycpXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/agent.js":
/*!*********************************************************!*\
  !*** ./node_modules/@techteamer/ocsp/lib/ocsp/agent.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ocsp = __webpack_require__(/*! ../ocsp */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp.js\")\n\nconst http = __webpack_require__(/*! http */ \"http\")\nconst https = __webpack_require__(/*! https */ \"https\")\nconst httpsAgent = https.Agent\nconst rfc5280 = __webpack_require__(/*! asn1.js-rfc5280 */ \"(rsc)/./node_modules/asn1.js-rfc5280/index.js\")\nconst SimpleCache = __webpack_require__(/*! simple-lru-cache */ \"(rsc)/./node_modules/simple-lru-cache/index.js\")\n\nclass Agent extends httpsAgent {\n  constructor (options) {\n    options = Object.assign({ CACacheSize: 1024 }, options)\n    super(options)\n\n    this.caCache = new SimpleCache({ maxSize: options.CACacheSize })\n  }\n\n  createConnection (options, connectListener) {\n    options.requestOCSP = true\n    const socket = super.createConnection(options, connectListener)\n\n    let stapling = null\n    socket.on('OCSPResponse', function (data) { stapling = data })\n\n    socket.on('secure', () => {\n      return this.handleOCSPResponse(socket, stapling, function (err) {\n        if (err) {\n          return socket.destroy(err)\n        }\n\n        // Time to allow all writes!\n        socket.uncork()\n      })\n    })\n\n    // Do not let any writes come through until we will verify OCSP\n    socket.cork()\n\n    return socket\n  }\n\n  handleOCSPResponse (socket, stapling, cb) {\n    if (!socket.authorized) {\n      return cb(new Error(socket.authorizationError))\n    }\n\n    let cert\n    let issuer\n\n    try {\n      cert = (socket.ssl || socket).getPeerCertificate(true)\n      issuer = cert && cert.issuerCertificate\n      cert = cert && cert.raw\n      cert = rfc5280.Certificate.decode(cert, 'der')\n\n      if (issuer) {\n        issuer = issuer.raw\n        issuer = rfc5280.Certificate.decode(issuer, 'der')\n      }\n    } catch (e) {\n      return cb(e)\n    }\n\n    function onIssuer (err, x509) {\n      if (err) {\n        return cb(err)\n      }\n\n      issuer = x509\n\n      if (stapling) {\n        const req = ocsp.request.generate(cert, issuer)\n        ocsp.verify({\n          request: req,\n          response: stapling\n        }, cb)\n      } else {\n        return ocsp.check({ cert, issuer }, cb)\n      }\n    }\n\n    if (issuer) {\n      return onIssuer(null, issuer)\n    } else {\n      return this.fetchIssuer(cert, stapling, onIssuer)\n    }\n  }\n\n  fetchIssuer (cert, stapling, cb) {\n    const issuers = ocsp.utils['id-ad-caIssuers'].join('.')\n\n    // TODO(indutny): use info from stapling response\n    ocsp.utils.getAuthorityInfo(cert, issuers, (err, uri) => {\n      if (err) { return cb(err) }\n\n      const ca = this.caCache.get(uri)\n      if (ca) { return cb(null, ca) }\n\n      let once = false\n      function done (err, data) {\n        if (once) { return }\n\n        once = true\n        cb(err, data)\n      }\n\n      function onResponse (res) {\n        if (res.statusCode < 200 || res.statusCode >= 400) {\n          return done(new Error('Failed to fetch CA: ' + res.statusCode))\n        }\n\n        const chunks = []\n        res.on('readable', function () {\n          const chunk = res.read()\n          if (!chunk) { return }\n          chunks.push(chunk)\n        })\n\n        res.on('end', function () {\n          let cert = Buffer.concat(chunks)\n\n          try {\n            cert = rfc5280.Certificate.decode(cert, 'der')\n          } catch (e) {\n            return done(e)\n          }\n\n          this.caCache.set(uri, cert)\n          done(null, cert)\n        })\n      }\n\n      try {\n        http.get(uri)\n          .on('error', done)\n          .on('response', onResponse.bind(this))\n      } catch (e) {\n        return done(e)\n      }\n    })\n  }\n}\n\nmodule.exports = Agent\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC9hZ2VudC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1CQUFPLENBQUMsa0VBQVM7O0FBRTlCLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTtBQUMzQixjQUFjLG1CQUFPLENBQUMsb0JBQU87QUFDN0I7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxzRUFBaUI7QUFDekMsb0JBQW9CLG1CQUFPLENBQUMsd0VBQWtCOztBQUU5QztBQUNBO0FBQ0EsOEJBQThCLG1CQUFtQjtBQUNqRDs7QUFFQSxxQ0FBcUMsOEJBQThCO0FBQ25FOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdEQUFnRCxpQkFBaUI7O0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUiw0QkFBNEIsY0FBYztBQUMxQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQSxnQkFBZ0I7O0FBRWhCO0FBQ0E7QUFDQSxvQkFBb0I7O0FBRXBCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQSxTQUFTOztBQUVUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvdmljdG9yd2lsc29uL0Rlc2t0b3AvcHJvamVjdHMvRVpWaXovbm9kZV9tb2R1bGVzL0B0ZWNodGVhbWVyL29jc3AvbGliL29jc3AvYWdlbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb2NzcCA9IHJlcXVpcmUoJy4uL29jc3AnKVxuXG5jb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpXG5jb25zdCBodHRwcyA9IHJlcXVpcmUoJ2h0dHBzJylcbmNvbnN0IGh0dHBzQWdlbnQgPSBodHRwcy5BZ2VudFxuY29uc3QgcmZjNTI4MCA9IHJlcXVpcmUoJ2FzbjEuanMtcmZjNTI4MCcpXG5jb25zdCBTaW1wbGVDYWNoZSA9IHJlcXVpcmUoJ3NpbXBsZS1scnUtY2FjaGUnKVxuXG5jbGFzcyBBZ2VudCBleHRlbmRzIGh0dHBzQWdlbnQge1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHsgQ0FDYWNoZVNpemU6IDEwMjQgfSwgb3B0aW9ucylcbiAgICBzdXBlcihvcHRpb25zKVxuXG4gICAgdGhpcy5jYUNhY2hlID0gbmV3IFNpbXBsZUNhY2hlKHsgbWF4U2l6ZTogb3B0aW9ucy5DQUNhY2hlU2l6ZSB9KVxuICB9XG5cbiAgY3JlYXRlQ29ubmVjdGlvbiAob3B0aW9ucywgY29ubmVjdExpc3RlbmVyKSB7XG4gICAgb3B0aW9ucy5yZXF1ZXN0T0NTUCA9IHRydWVcbiAgICBjb25zdCBzb2NrZXQgPSBzdXBlci5jcmVhdGVDb25uZWN0aW9uKG9wdGlvbnMsIGNvbm5lY3RMaXN0ZW5lcilcblxuICAgIGxldCBzdGFwbGluZyA9IG51bGxcbiAgICBzb2NrZXQub24oJ09DU1BSZXNwb25zZScsIGZ1bmN0aW9uIChkYXRhKSB7IHN0YXBsaW5nID0gZGF0YSB9KVxuXG4gICAgc29ja2V0Lm9uKCdzZWN1cmUnLCAoKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5oYW5kbGVPQ1NQUmVzcG9uc2Uoc29ja2V0LCBzdGFwbGluZywgZnVuY3Rpb24gKGVycikge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgcmV0dXJuIHNvY2tldC5kZXN0cm95KGVycilcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRpbWUgdG8gYWxsb3cgYWxsIHdyaXRlcyFcbiAgICAgICAgc29ja2V0LnVuY29yaygpXG4gICAgICB9KVxuICAgIH0pXG5cbiAgICAvLyBEbyBub3QgbGV0IGFueSB3cml0ZXMgY29tZSB0aHJvdWdoIHVudGlsIHdlIHdpbGwgdmVyaWZ5IE9DU1BcbiAgICBzb2NrZXQuY29yaygpXG5cbiAgICByZXR1cm4gc29ja2V0XG4gIH1cblxuICBoYW5kbGVPQ1NQUmVzcG9uc2UgKHNvY2tldCwgc3RhcGxpbmcsIGNiKSB7XG4gICAgaWYgKCFzb2NrZXQuYXV0aG9yaXplZCkge1xuICAgICAgcmV0dXJuIGNiKG5ldyBFcnJvcihzb2NrZXQuYXV0aG9yaXphdGlvbkVycm9yKSlcbiAgICB9XG5cbiAgICBsZXQgY2VydFxuICAgIGxldCBpc3N1ZXJcblxuICAgIHRyeSB7XG4gICAgICBjZXJ0ID0gKHNvY2tldC5zc2wgfHwgc29ja2V0KS5nZXRQZWVyQ2VydGlmaWNhdGUodHJ1ZSlcbiAgICAgIGlzc3VlciA9IGNlcnQgJiYgY2VydC5pc3N1ZXJDZXJ0aWZpY2F0ZVxuICAgICAgY2VydCA9IGNlcnQgJiYgY2VydC5yYXdcbiAgICAgIGNlcnQgPSByZmM1MjgwLkNlcnRpZmljYXRlLmRlY29kZShjZXJ0LCAnZGVyJylcblxuICAgICAgaWYgKGlzc3Vlcikge1xuICAgICAgICBpc3N1ZXIgPSBpc3N1ZXIucmF3XG4gICAgICAgIGlzc3VlciA9IHJmYzUyODAuQ2VydGlmaWNhdGUuZGVjb2RlKGlzc3VlciwgJ2RlcicpXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGNiKGUpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25Jc3N1ZXIgKGVyciwgeDUwOSkge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZXR1cm4gY2IoZXJyKVxuICAgICAgfVxuXG4gICAgICBpc3N1ZXIgPSB4NTA5XG5cbiAgICAgIGlmIChzdGFwbGluZykge1xuICAgICAgICBjb25zdCByZXEgPSBvY3NwLnJlcXVlc3QuZ2VuZXJhdGUoY2VydCwgaXNzdWVyKVxuICAgICAgICBvY3NwLnZlcmlmeSh7XG4gICAgICAgICAgcmVxdWVzdDogcmVxLFxuICAgICAgICAgIHJlc3BvbnNlOiBzdGFwbGluZ1xuICAgICAgICB9LCBjYilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBvY3NwLmNoZWNrKHsgY2VydCwgaXNzdWVyIH0sIGNiKVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc3N1ZXIpIHtcbiAgICAgIHJldHVybiBvbklzc3VlcihudWxsLCBpc3N1ZXIpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLmZldGNoSXNzdWVyKGNlcnQsIHN0YXBsaW5nLCBvbklzc3VlcilcbiAgICB9XG4gIH1cblxuICBmZXRjaElzc3VlciAoY2VydCwgc3RhcGxpbmcsIGNiKSB7XG4gICAgY29uc3QgaXNzdWVycyA9IG9jc3AudXRpbHNbJ2lkLWFkLWNhSXNzdWVycyddLmpvaW4oJy4nKVxuXG4gICAgLy8gVE9ETyhpbmR1dG55KTogdXNlIGluZm8gZnJvbSBzdGFwbGluZyByZXNwb25zZVxuICAgIG9jc3AudXRpbHMuZ2V0QXV0aG9yaXR5SW5mbyhjZXJ0LCBpc3N1ZXJzLCAoZXJyLCB1cmkpID0+IHtcbiAgICAgIGlmIChlcnIpIHsgcmV0dXJuIGNiKGVycikgfVxuXG4gICAgICBjb25zdCBjYSA9IHRoaXMuY2FDYWNoZS5nZXQodXJpKVxuICAgICAgaWYgKGNhKSB7IHJldHVybiBjYihudWxsLCBjYSkgfVxuXG4gICAgICBsZXQgb25jZSA9IGZhbHNlXG4gICAgICBmdW5jdGlvbiBkb25lIChlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYgKG9uY2UpIHsgcmV0dXJuIH1cblxuICAgICAgICBvbmNlID0gdHJ1ZVxuICAgICAgICBjYihlcnIsIGRhdGEpXG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIG9uUmVzcG9uc2UgKHJlcykge1xuICAgICAgICBpZiAocmVzLnN0YXR1c0NvZGUgPCAyMDAgfHwgcmVzLnN0YXR1c0NvZGUgPj0gNDAwKSB7XG4gICAgICAgICAgcmV0dXJuIGRvbmUobmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggQ0E6ICcgKyByZXMuc3RhdHVzQ29kZSkpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjaHVua3MgPSBbXVxuICAgICAgICByZXMub24oJ3JlYWRhYmxlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGNvbnN0IGNodW5rID0gcmVzLnJlYWQoKVxuICAgICAgICAgIGlmICghY2h1bmspIHsgcmV0dXJuIH1cbiAgICAgICAgICBjaHVua3MucHVzaChjaHVuaylcbiAgICAgICAgfSlcblxuICAgICAgICByZXMub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBsZXQgY2VydCA9IEJ1ZmZlci5jb25jYXQoY2h1bmtzKVxuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNlcnQgPSByZmM1MjgwLkNlcnRpZmljYXRlLmRlY29kZShjZXJ0LCAnZGVyJylcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gZG9uZShlKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMuY2FDYWNoZS5zZXQodXJpLCBjZXJ0KVxuICAgICAgICAgIGRvbmUobnVsbCwgY2VydClcbiAgICAgICAgfSlcbiAgICAgIH1cblxuICAgICAgdHJ5IHtcbiAgICAgICAgaHR0cC5nZXQodXJpKVxuICAgICAgICAgIC5vbignZXJyb3InLCBkb25lKVxuICAgICAgICAgIC5vbigncmVzcG9uc2UnLCBvblJlc3BvbnNlLmJpbmQodGhpcykpXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBkb25lKGUpXG4gICAgICB9XG4gICAgfSlcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFnZW50XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/agent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/api.js":
/*!*******************************************************!*\
  !*** ./node_modules/@techteamer/ocsp/lib/ocsp/api.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const ocsp = __webpack_require__(/*! ../ocsp */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp.js\")\nconst rfc2560 = __webpack_require__(/*! asn1.js-rfc2560 */ \"(rsc)/./node_modules/asn1.js-rfc2560/index.js\")\nconst rfc5280 = __webpack_require__(/*! asn1.js-rfc5280 */ \"(rsc)/./node_modules/asn1.js-rfc5280/index.js\")\n\nexports.getOCSPURI = function getOCSPURI (rawCert, cb) {\n  const ocspMethod = rfc2560['id-pkix-ocsp'].join('.')\n\n  let cert = ocsp.utils.toDER(rawCert, 'CERTIFICATE')\n  cert = rfc5280.Certificate.decode(cert, 'der')\n\n  ocsp.utils.getAuthorityInfo(cert, ocspMethod, cb)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC9hcGkuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLGtFQUFTO0FBQzlCLGdCQUFnQixtQkFBTyxDQUFDLHNFQUFpQjtBQUN6QyxnQkFBZ0IsbUJBQU8sQ0FBQyxzRUFBaUI7O0FBRXpDLGtCQUFrQjtBQUNsQjs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWN0b3J3aWxzb24vRGVza3RvcC9wcm9qZWN0cy9FWlZpei9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC9hcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb2NzcCA9IHJlcXVpcmUoJy4uL29jc3AnKVxuY29uc3QgcmZjMjU2MCA9IHJlcXVpcmUoJ2FzbjEuanMtcmZjMjU2MCcpXG5jb25zdCByZmM1MjgwID0gcmVxdWlyZSgnYXNuMS5qcy1yZmM1MjgwJylcblxuZXhwb3J0cy5nZXRPQ1NQVVJJID0gZnVuY3Rpb24gZ2V0T0NTUFVSSSAocmF3Q2VydCwgY2IpIHtcbiAgY29uc3Qgb2NzcE1ldGhvZCA9IHJmYzI1NjBbJ2lkLXBraXgtb2NzcCddLmpvaW4oJy4nKVxuXG4gIGxldCBjZXJ0ID0gb2NzcC51dGlscy50b0RFUihyYXdDZXJ0LCAnQ0VSVElGSUNBVEUnKVxuICBjZXJ0ID0gcmZjNTI4MC5DZXJ0aWZpY2F0ZS5kZWNvZGUoY2VydCwgJ2RlcicpXG5cbiAgb2NzcC51dGlscy5nZXRBdXRob3JpdHlJbmZvKGNlcnQsIG9jc3BNZXRob2QsIGNiKVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/api.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/cache.js":
/*!*********************************************************!*\
  !*** ./node_modules/@techteamer/ocsp/lib/ocsp/cache.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ocsp = __webpack_require__(/*! ../ocsp */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp.js\")\n\nclass Cache {\n  constructor (options) {\n    this.options = options || {}\n    this.cache = {}\n\n    // Override methods\n    if (this.options.probe) {\n      this.probe = this.options.probe\n    }\n    if (this.options.store) {\n      this.store = this.options.store\n    }\n    if (this.options.filter) {\n      this.filter = this.options.filter\n    }\n  }\n\n  filter (url, callback) {\n    callback(null)\n  }\n\n  probe (id, callback) {\n    if (Object.prototype.hasOwnProperty.call(this.cache, id)) {\n      callback(null, this.cache[id])\n    } else {\n      callback(null, false)\n    }\n  }\n\n  store (id, response, maxTime, callback) {\n    if (Object.prototype.hasOwnProperty.call(this.cache, id)) {\n      clearTimeout(this.cache[id].timer)\n    }\n\n    this.cache[id] = {\n      response,\n      timer: setTimeout(() => { delete this.cache[id] }, maxTime)\n    }\n\n    callback(null, null)\n  }\n\n  request (id, data, callback) {\n    function done (err, response) {\n      if (callback) {\n        callback(err, response)\n      }\n      callback = null\n    }\n\n    const onResponse = (err, ocsp) => {\n      if (err) {\n        return done(err)\n      }\n\n      // Respond early\n      done(null, ocsp)\n\n      // Try parsing and caching response\n      this.getMaxStoreTime(ocsp, (err, maxTime) => {\n        if (err) {\n          return\n        }\n\n        this.store(id, ocsp, maxTime, () => {\n          // No-op\n        })\n      })\n    }\n\n    // Check that url isn't blacklisted\n    this.filter(data.url, function (err) {\n      if (err) {\n        return done(err, null)\n      }\n\n      ocsp.utils.getResponse(data.url, data.ocsp, onResponse)\n    })\n  }\n\n  getMaxStoreTime (response, callback) {\n    let basic\n    try {\n      basic = ocsp.utils.parseResponse(response).value\n    } catch (e) {\n      return callback(e)\n    }\n\n    // Not enough responses\n    if (basic.tbsResponseData.responses.length === 0) { return callback(new Error('No OCSP responses')) }\n\n    const responses = basic.tbsResponseData.responses\n\n    // Every response should be positive\n    const good = responses.every(function (response) {\n      return response.certStatus.type === 'good'\n    })\n\n    // No good - no cache\n    if (!good) {\n      return callback(new Error('Some OCSP responses are not good'))\n    }\n\n    // Find minimum nextUpdate time\n    let nextUpdate = 0\n    for (let i = 0; i < responses.length; i++) {\n      const response = responses[i]\n      const responseNext = response.nextUpdate\n      if (!responseNext) {\n        continue\n      }\n      if (nextUpdate === 0 || nextUpdate > responseNext) {\n        nextUpdate = responseNext\n      }\n    }\n\n    return callback(null, Math.min(Math.max(0, nextUpdate - new Date()), 0x7FFFFFFF))\n  }\n\n  clear () {\n    const cacheIds = Object.keys(this.cache)\n    cacheIds.forEach((cacheId) => {\n      clearTimeout(this.cache[cacheId].timer)\n      delete this.cache[cacheId]\n    })\n  }\n}\n\nmodule.exports = Cache\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC9jYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1CQUFPLENBQUMsa0VBQVM7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdDQUFnQyx1QkFBdUI7QUFDdkQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0Esd0RBQXdEOztBQUV4RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL1VzZXJzL3ZpY3RvcndpbHNvbi9EZXNrdG9wL3Byb2plY3RzL0VaVml6L25vZGVfbW9kdWxlcy9AdGVjaHRlYW1lci9vY3NwL2xpYi9vY3NwL2NhY2hlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG9jc3AgPSByZXF1aXJlKCcuLi9vY3NwJylcblxuY2xhc3MgQ2FjaGUge1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge31cbiAgICB0aGlzLmNhY2hlID0ge31cblxuICAgIC8vIE92ZXJyaWRlIG1ldGhvZHNcbiAgICBpZiAodGhpcy5vcHRpb25zLnByb2JlKSB7XG4gICAgICB0aGlzLnByb2JlID0gdGhpcy5vcHRpb25zLnByb2JlXG4gICAgfVxuICAgIGlmICh0aGlzLm9wdGlvbnMuc3RvcmUpIHtcbiAgICAgIHRoaXMuc3RvcmUgPSB0aGlzLm9wdGlvbnMuc3RvcmVcbiAgICB9XG4gICAgaWYgKHRoaXMub3B0aW9ucy5maWx0ZXIpIHtcbiAgICAgIHRoaXMuZmlsdGVyID0gdGhpcy5vcHRpb25zLmZpbHRlclxuICAgIH1cbiAgfVxuXG4gIGZpbHRlciAodXJsLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKG51bGwpXG4gIH1cblxuICBwcm9iZSAoaWQsIGNhbGxiYWNrKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmNhY2hlLCBpZCkpIHtcbiAgICAgIGNhbGxiYWNrKG51bGwsIHRoaXMuY2FjaGVbaWRdKVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayhudWxsLCBmYWxzZSlcbiAgICB9XG4gIH1cblxuICBzdG9yZSAoaWQsIHJlc3BvbnNlLCBtYXhUaW1lLCBjYWxsYmFjaykge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5jYWNoZSwgaWQpKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5jYWNoZVtpZF0udGltZXIpXG4gICAgfVxuXG4gICAgdGhpcy5jYWNoZVtpZF0gPSB7XG4gICAgICByZXNwb25zZSxcbiAgICAgIHRpbWVyOiBzZXRUaW1lb3V0KCgpID0+IHsgZGVsZXRlIHRoaXMuY2FjaGVbaWRdIH0sIG1heFRpbWUpXG4gICAgfVxuXG4gICAgY2FsbGJhY2sobnVsbCwgbnVsbClcbiAgfVxuXG4gIHJlcXVlc3QgKGlkLCBkYXRhLCBjYWxsYmFjaykge1xuICAgIGZ1bmN0aW9uIGRvbmUgKGVyciwgcmVzcG9uc2UpIHtcbiAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayhlcnIsIHJlc3BvbnNlKVxuICAgICAgfVxuICAgICAgY2FsbGJhY2sgPSBudWxsXG4gICAgfVxuXG4gICAgY29uc3Qgb25SZXNwb25zZSA9IChlcnIsIG9jc3ApID0+IHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIGRvbmUoZXJyKVxuICAgICAgfVxuXG4gICAgICAvLyBSZXNwb25kIGVhcmx5XG4gICAgICBkb25lKG51bGwsIG9jc3ApXG5cbiAgICAgIC8vIFRyeSBwYXJzaW5nIGFuZCBjYWNoaW5nIHJlc3BvbnNlXG4gICAgICB0aGlzLmdldE1heFN0b3JlVGltZShvY3NwLCAoZXJyLCBtYXhUaW1lKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3RvcmUoaWQsIG9jc3AsIG1heFRpbWUsICgpID0+IHtcbiAgICAgICAgICAvLyBOby1vcFxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBDaGVjayB0aGF0IHVybCBpc24ndCBibGFja2xpc3RlZFxuICAgIHRoaXMuZmlsdGVyKGRhdGEudXJsLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHJldHVybiBkb25lKGVyciwgbnVsbClcbiAgICAgIH1cblxuICAgICAgb2NzcC51dGlscy5nZXRSZXNwb25zZShkYXRhLnVybCwgZGF0YS5vY3NwLCBvblJlc3BvbnNlKVxuICAgIH0pXG4gIH1cblxuICBnZXRNYXhTdG9yZVRpbWUgKHJlc3BvbnNlLCBjYWxsYmFjaykge1xuICAgIGxldCBiYXNpY1xuICAgIHRyeSB7XG4gICAgICBiYXNpYyA9IG9jc3AudXRpbHMucGFyc2VSZXNwb25zZShyZXNwb25zZSkudmFsdWVcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soZSlcbiAgICB9XG5cbiAgICAvLyBOb3QgZW5vdWdoIHJlc3BvbnNlc1xuICAgIGlmIChiYXNpYy50YnNSZXNwb25zZURhdGEucmVzcG9uc2VzLmxlbmd0aCA9PT0gMCkgeyByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKCdObyBPQ1NQIHJlc3BvbnNlcycpKSB9XG5cbiAgICBjb25zdCByZXNwb25zZXMgPSBiYXNpYy50YnNSZXNwb25zZURhdGEucmVzcG9uc2VzXG5cbiAgICAvLyBFdmVyeSByZXNwb25zZSBzaG91bGQgYmUgcG9zaXRpdmVcbiAgICBjb25zdCBnb29kID0gcmVzcG9uc2VzLmV2ZXJ5KGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLmNlcnRTdGF0dXMudHlwZSA9PT0gJ2dvb2QnXG4gICAgfSlcblxuICAgIC8vIE5vIGdvb2QgLSBubyBjYWNoZVxuICAgIGlmICghZ29vZCkge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcignU29tZSBPQ1NQIHJlc3BvbnNlcyBhcmUgbm90IGdvb2QnKSlcbiAgICB9XG5cbiAgICAvLyBGaW5kIG1pbmltdW0gbmV4dFVwZGF0ZSB0aW1lXG4gICAgbGV0IG5leHRVcGRhdGUgPSAwXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXNwb25zZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gcmVzcG9uc2VzW2ldXG4gICAgICBjb25zdCByZXNwb25zZU5leHQgPSByZXNwb25zZS5uZXh0VXBkYXRlXG4gICAgICBpZiAoIXJlc3BvbnNlTmV4dCkge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuICAgICAgaWYgKG5leHRVcGRhdGUgPT09IDAgfHwgbmV4dFVwZGF0ZSA+IHJlc3BvbnNlTmV4dCkge1xuICAgICAgICBuZXh0VXBkYXRlID0gcmVzcG9uc2VOZXh0XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGNhbGxiYWNrKG51bGwsIE1hdGgubWluKE1hdGgubWF4KDAsIG5leHRVcGRhdGUgLSBuZXcgRGF0ZSgpKSwgMHg3RkZGRkZGRikpXG4gIH1cblxuICBjbGVhciAoKSB7XG4gICAgY29uc3QgY2FjaGVJZHMgPSBPYmplY3Qua2V5cyh0aGlzLmNhY2hlKVxuICAgIGNhY2hlSWRzLmZvckVhY2goKGNhY2hlSWQpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLmNhY2hlW2NhY2hlSWRdLnRpbWVyKVxuICAgICAgZGVsZXRlIHRoaXMuY2FjaGVbY2FjaGVJZF1cbiAgICB9KVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FjaGVcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/cache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/check.js":
/*!*********************************************************!*\
  !*** ./node_modules/@techteamer/ocsp/lib/ocsp/check.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ocsp = __webpack_require__(/*! ../ocsp */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp.js\")\n\nconst rfc2560 = __webpack_require__(/*! asn1.js-rfc2560 */ \"(rsc)/./node_modules/asn1.js-rfc2560/index.js\")\n\nmodule.exports = function check (options, cb) {\n  let sync = true\n  let req\n\n  function done (err, data) {\n    if (sync) {\n      sync = false\n      process.nextTick(function () {\n        cb(err, data)\n      })\n      return\n    }\n\n    cb(err, data)\n  }\n\n  try {\n    req = ocsp.request.generate(options.cert, options.issuer)\n  } catch (e) {\n    return done(e)\n  }\n\n  const ocspMethod = rfc2560['id-pkix-ocsp'].join('.')\n  ocsp.utils.getAuthorityInfo(req.cert, ocspMethod, function (err, uri) {\n    if (err) { return done(err) }\n\n    ocsp.utils.getResponse(uri, req.data, function (err, raw) {\n      if (err) {\n        return done(err)\n      }\n\n      try {\n        ocsp.verify({ request: req, response: raw }, done)\n      } catch (e) {\n        return done(e)\n      }\n    })\n  })\n\n  sync = false\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC9jaGVjay5qcyIsIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1CQUFPLENBQUMsa0VBQVM7O0FBRTlCLGdCQUFnQixtQkFBTyxDQUFDLHNFQUFpQjs7QUFFekM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZUFBZTs7QUFFZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNCQUFzQiw2QkFBNkI7QUFDbkQsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdmljdG9yd2lsc29uL0Rlc2t0b3AvcHJvamVjdHMvRVpWaXovbm9kZV9tb2R1bGVzL0B0ZWNodGVhbWVyL29jc3AvbGliL29jc3AvY2hlY2suanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb2NzcCA9IHJlcXVpcmUoJy4uL29jc3AnKVxuXG5jb25zdCByZmMyNTYwID0gcmVxdWlyZSgnYXNuMS5qcy1yZmMyNTYwJylcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjaGVjayAob3B0aW9ucywgY2IpIHtcbiAgbGV0IHN5bmMgPSB0cnVlXG4gIGxldCByZXFcblxuICBmdW5jdGlvbiBkb25lIChlcnIsIGRhdGEpIHtcbiAgICBpZiAoc3luYykge1xuICAgICAgc3luYyA9IGZhbHNlXG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2IoZXJyLCBkYXRhKVxuICAgICAgfSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNiKGVyciwgZGF0YSlcbiAgfVxuXG4gIHRyeSB7XG4gICAgcmVxID0gb2NzcC5yZXF1ZXN0LmdlbmVyYXRlKG9wdGlvbnMuY2VydCwgb3B0aW9ucy5pc3N1ZXIpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZG9uZShlKVxuICB9XG5cbiAgY29uc3Qgb2NzcE1ldGhvZCA9IHJmYzI1NjBbJ2lkLXBraXgtb2NzcCddLmpvaW4oJy4nKVxuICBvY3NwLnV0aWxzLmdldEF1dGhvcml0eUluZm8ocmVxLmNlcnQsIG9jc3BNZXRob2QsIGZ1bmN0aW9uIChlcnIsIHVyaSkge1xuICAgIGlmIChlcnIpIHsgcmV0dXJuIGRvbmUoZXJyKSB9XG5cbiAgICBvY3NwLnV0aWxzLmdldFJlc3BvbnNlKHVyaSwgcmVxLmRhdGEsIGZ1bmN0aW9uIChlcnIsIHJhdykge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZXR1cm4gZG9uZShlcnIpXG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIG9jc3AudmVyaWZ5KHsgcmVxdWVzdDogcmVxLCByZXNwb25zZTogcmF3IH0sIGRvbmUpXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBkb25lKGUpXG4gICAgICB9XG4gICAgfSlcbiAgfSlcblxuICBzeW5jID0gZmFsc2Vcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/check.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/request.js":
/*!***********************************************************!*\
  !*** ./node_modules/@techteamer/ocsp/lib/ocsp/request.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const ocsp = __webpack_require__(/*! ../ocsp */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp.js\")\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\")\nconst rfc2560 = __webpack_require__(/*! asn1.js-rfc2560 */ \"(rsc)/./node_modules/asn1.js-rfc2560/index.js\")\nconst rfc5280 = __webpack_require__(/*! asn1.js-rfc5280 */ \"(rsc)/./node_modules/asn1.js-rfc5280/index.js\")\n\nfunction sha1 (data) {\n  return crypto.createHash('sha1').update(data).digest()\n}\n\nexports.generate = function generate (rawCert, rawIssuer) {\n  let cert\n  if (rawCert.tbsCertificate) {\n    cert = rawCert\n  } else {\n    cert = rfc5280.Certificate.decode(\n      ocsp.utils.toDER(rawCert, 'CERTIFICATE'),\n      'der')\n  }\n  let issuer\n  if (rawIssuer.tbsCertificate) {\n    issuer = rawIssuer\n  } else {\n    issuer = rfc5280.Certificate.decode(\n      ocsp.utils.toDER(rawIssuer, 'CERTIFICATE'),\n      'der')\n  }\n\n  const tbsCert = cert.tbsCertificate\n  const tbsIssuer = issuer.tbsCertificate\n\n  const certID = {\n    hashAlgorithm: {\n      // algorithm: [ 2, 16, 840, 1, 101, 3, 4, 2, 1 ]  // sha256\n      algorithm: [1, 3, 14, 3, 2, 26] // sha1\n    },\n    issuerNameHash: sha1(rfc5280.Name.encode(tbsCert.issuer, 'der')),\n    issuerKeyHash: sha1(\n      tbsIssuer.subjectPublicKeyInfo.subjectPublicKey.data),\n    serialNumber: tbsCert.serialNumber\n  }\n\n  const tbs = {\n    version: 'v1',\n    requestList: [{\n      reqCert: certID\n    }],\n    requestExtensions: [{\n      extnID: rfc2560['id-pkix-ocsp-nonce'],\n      critical: false,\n      extnValue: rfc2560.Nonce.encode(crypto.randomBytes(16), 'der')\n    }]\n  }\n\n  const req = {\n    tbsRequest: tbs\n  }\n\n  return {\n    id: sha1(rfc2560.CertID.encode(certID, 'der')),\n    certID,\n    data: rfc2560.OCSPRequest.encode(req, 'der'),\n\n    // Just to avoid re-parsing DER\n    cert,\n    issuer\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxrRUFBUztBQUM5QixlQUFlLG1CQUFPLENBQUMsc0JBQVE7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsc0VBQWlCO0FBQ3pDLGdCQUFnQixtQkFBTyxDQUFDLHNFQUFpQjs7QUFFekM7QUFDQTtBQUNBOztBQUVBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdmljdG9yd2lsc29uL0Rlc2t0b3AvcHJvamVjdHMvRVpWaXovbm9kZV9tb2R1bGVzL0B0ZWNodGVhbWVyL29jc3AvbGliL29jc3AvcmVxdWVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBvY3NwID0gcmVxdWlyZSgnLi4vb2NzcCcpXG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKVxuY29uc3QgcmZjMjU2MCA9IHJlcXVpcmUoJ2FzbjEuanMtcmZjMjU2MCcpXG5jb25zdCByZmM1MjgwID0gcmVxdWlyZSgnYXNuMS5qcy1yZmM1MjgwJylcblxuZnVuY3Rpb24gc2hhMSAoZGF0YSkge1xuICByZXR1cm4gY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTEnKS51cGRhdGUoZGF0YSkuZGlnZXN0KClcbn1cblxuZXhwb3J0cy5nZW5lcmF0ZSA9IGZ1bmN0aW9uIGdlbmVyYXRlIChyYXdDZXJ0LCByYXdJc3N1ZXIpIHtcbiAgbGV0IGNlcnRcbiAgaWYgKHJhd0NlcnQudGJzQ2VydGlmaWNhdGUpIHtcbiAgICBjZXJ0ID0gcmF3Q2VydFxuICB9IGVsc2Uge1xuICAgIGNlcnQgPSByZmM1MjgwLkNlcnRpZmljYXRlLmRlY29kZShcbiAgICAgIG9jc3AudXRpbHMudG9ERVIocmF3Q2VydCwgJ0NFUlRJRklDQVRFJyksXG4gICAgICAnZGVyJylcbiAgfVxuICBsZXQgaXNzdWVyXG4gIGlmIChyYXdJc3N1ZXIudGJzQ2VydGlmaWNhdGUpIHtcbiAgICBpc3N1ZXIgPSByYXdJc3N1ZXJcbiAgfSBlbHNlIHtcbiAgICBpc3N1ZXIgPSByZmM1MjgwLkNlcnRpZmljYXRlLmRlY29kZShcbiAgICAgIG9jc3AudXRpbHMudG9ERVIocmF3SXNzdWVyLCAnQ0VSVElGSUNBVEUnKSxcbiAgICAgICdkZXInKVxuICB9XG5cbiAgY29uc3QgdGJzQ2VydCA9IGNlcnQudGJzQ2VydGlmaWNhdGVcbiAgY29uc3QgdGJzSXNzdWVyID0gaXNzdWVyLnRic0NlcnRpZmljYXRlXG5cbiAgY29uc3QgY2VydElEID0ge1xuICAgIGhhc2hBbGdvcml0aG06IHtcbiAgICAgIC8vIGFsZ29yaXRobTogWyAyLCAxNiwgODQwLCAxLCAxMDEsIDMsIDQsIDIsIDEgXSAgLy8gc2hhMjU2XG4gICAgICBhbGdvcml0aG06IFsxLCAzLCAxNCwgMywgMiwgMjZdIC8vIHNoYTFcbiAgICB9LFxuICAgIGlzc3Vlck5hbWVIYXNoOiBzaGExKHJmYzUyODAuTmFtZS5lbmNvZGUodGJzQ2VydC5pc3N1ZXIsICdkZXInKSksXG4gICAgaXNzdWVyS2V5SGFzaDogc2hhMShcbiAgICAgIHRic0lzc3Vlci5zdWJqZWN0UHVibGljS2V5SW5mby5zdWJqZWN0UHVibGljS2V5LmRhdGEpLFxuICAgIHNlcmlhbE51bWJlcjogdGJzQ2VydC5zZXJpYWxOdW1iZXJcbiAgfVxuXG4gIGNvbnN0IHRicyA9IHtcbiAgICB2ZXJzaW9uOiAndjEnLFxuICAgIHJlcXVlc3RMaXN0OiBbe1xuICAgICAgcmVxQ2VydDogY2VydElEXG4gICAgfV0sXG4gICAgcmVxdWVzdEV4dGVuc2lvbnM6IFt7XG4gICAgICBleHRuSUQ6IHJmYzI1NjBbJ2lkLXBraXgtb2NzcC1ub25jZSddLFxuICAgICAgY3JpdGljYWw6IGZhbHNlLFxuICAgICAgZXh0blZhbHVlOiByZmMyNTYwLk5vbmNlLmVuY29kZShjcnlwdG8ucmFuZG9tQnl0ZXMoMTYpLCAnZGVyJylcbiAgICB9XVxuICB9XG5cbiAgY29uc3QgcmVxID0ge1xuICAgIHRic1JlcXVlc3Q6IHRic1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpZDogc2hhMShyZmMyNTYwLkNlcnRJRC5lbmNvZGUoY2VydElELCAnZGVyJykpLFxuICAgIGNlcnRJRCxcbiAgICBkYXRhOiByZmMyNTYwLk9DU1BSZXF1ZXN0LmVuY29kZShyZXEsICdkZXInKSxcblxuICAgIC8vIEp1c3QgdG8gYXZvaWQgcmUtcGFyc2luZyBERVJcbiAgICBjZXJ0LFxuICAgIGlzc3VlclxuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/server.js":
/*!**********************************************************!*\
  !*** ./node_modules/@techteamer/ocsp/lib/ocsp/server.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ocsp = __webpack_require__(/*! ../ocsp */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp.js\")\n\nconst http = __webpack_require__(/*! http */ \"http\")\nconst httpServer = http.Server\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\")\n\nconst async = __webpack_require__(/*! async */ \"(rsc)/./node_modules/async/dist/async.mjs\")\nconst rfc2560 = __webpack_require__(/*! asn1.js-rfc2560 */ \"(rsc)/./node_modules/asn1.js-rfc2560/index.js\")\nconst rfc5280 = __webpack_require__(/*! asn1.js-rfc5280 */ \"(rsc)/./node_modules/asn1.js-rfc5280/index.js\")\n\nfunction handler (req, res) {\n  if (req.method !== 'POST') {\n    return res.writeHead(400)\n  }\n\n  if (req.headers['content-type'] !== 'application/ocsp-request') {\n    return res.writeHead(400)\n  }\n\n  const chunks = []\n  req.on('readable', function () {\n    const chunk = req.read()\n    if (chunk) { chunks.push(chunk) }\n  })\n\n  function errRes (status) {\n    return rfc2560.OCSPResponse.encode({\n      responseStatus: status\n    }, 'der')\n  }\n\n  function done (out) {\n    res.writeHead(200, {\n      'Content-Type': 'application/ocsp-response',\n      'Content-Length': out.length\n    })\n    res.end(out)\n  }\n\n  req.on('end', () => {\n    const body = Buffer.concat(chunks)\n    let ocspReq\n    try {\n      ocspReq = rfc2560.OCSPRequest.decode(body, 'der')\n    } catch (e) {\n      return done(errRes('malformed_request'))\n    }\n\n    this.getResponses(ocspReq, (err, responses) => {\n      // Assume not found\n      if (err) {\n        res.writeHead(404)\n        res.end()\n        return\n      }\n\n      return done(responses)\n    })\n  })\n}\n\nclass Server extends httpServer {\n  constructor (options) {\n    super(handler)\n\n    this.options = Object.assign({ nextUpdate: 24 * 3600 * 1e3 }, options)\n\n    this.key = this.options.key\n    this.certroot = rfc5280.Certificate.decode(\n      ocsp.utils.toDER(options.cert, 'CERTIFICATE'),\n      'der')\n    this.cert = this.certroot.tbsCertificate\n\n    const issuerName = rfc5280.Name.encode(this.cert.subject, 'der')\n    const issuerKey = this.cert.subjectPublicKeyInfo.subjectPublicKey.data\n\n    this.certID = {}\n    Object.keys(ocsp.utils.digestRev).forEach(function (digest) {\n      this.certID[digest] = {\n        issuerNameHash: crypto.createHash(digest).update(issuerName).digest(),\n        issuerKeyHash: crypto.createHash(digest).update(issuerKey).digest()\n      }\n    }, this)\n\n    this.certs = {}\n  }\n\n  static create (options) {\n    return new Server(options)\n  }\n\n  addCert (serial, status, info) {\n    this.certs[serial.toString(16)] = {\n      type: status,\n      value: info\n    }\n  }\n\n  getResponses (req, cb) {\n    const reqList = req.tbsRequest.requestList\n\n    // TODO(indutny): support signed requests\n    async.map(reqList, (req, cb) => {\n      this.getResponse(req, cb)\n    }, (err, responses) => {\n      if (err) { return cb(err) }\n\n      // TODO(indutny): send extensions\n      const basic = {\n        tbsResponseData: {\n          version: 'v1',\n          responderID: {\n            type: 'byKey',\n            value: this.certID.sha1.issuerKeyHash\n          },\n          producedAt: new Date(),\n          responses\n        },\n\n        signatureAlgorithm: {\n          algorithm: ocsp.utils.signRev.sha512WithRSAEncryption\n        },\n        signature: null,\n\n        certs: [\n          this.certroot\n        ]\n      }\n\n      const sign = crypto.createSign('sha512WithRSAEncryption')\n      sign.update(rfc2560.ResponseData.encode(basic.tbsResponseData, 'der'))\n      basic.signature = {\n        unused: 0,\n        data: sign.sign(this.key)\n      }\n\n      const res = {\n        responseStatus: 'successful',\n        responseBytes: {\n          responseType: 'id-pkix-ocsp-basic',\n          response: rfc2560.BasicOCSPResponse.encode(basic, 'der')\n        }\n      }\n\n      cb(null, rfc2560.OCSPResponse.encode(res, 'der'))\n    })\n  }\n\n  getResponse (req, cb) {\n    const certID = req.reqCert\n\n    const digestId = certID.hashAlgorithm.algorithm.join('.')\n    const digest = ocsp.utils.digest[digestId]\n    if (!digest) { return cb(new Error('Unknown digest: ' + digestId)) }\n\n    const expectedID = this.certID[digest]\n    if (!expectedID) { return cb(new Error('No pre-generated CertID for digest: ' + digest)) }\n\n    if (expectedID.issuerNameHash.toString('hex') !==\n      certID.issuerNameHash.toString('hex')) {\n      return cb(new Error('Issuer name mismatch'))\n    }\n\n    if (expectedID.issuerKeyHash.toString('hex') !==\n      certID.issuerKeyHash.toString('hex')) {\n      return cb(new Error('Issuer key mismatch'))\n    }\n\n    const serial = certID.serialNumber.toString(16)\n    const cert = this.certs[serial]\n\n    const response = {\n      certId: certID,\n      certStatus: null,\n      thisUpdate: new Date(),\n      nextUpdate: new Date(+new Date() + this.options.nextUpdate)\n    }\n    if (cert) {\n      response.certStatus = cert\n    } else {\n      response.certStatus = {\n        type: 'unknown',\n        value: null\n      }\n    }\n\n    cb(null, response)\n  }\n}\n\nmodule.exports = Server\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC9zZXJ2ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLGtFQUFTOztBQUU5QixhQUFhLG1CQUFPLENBQUMsa0JBQU07QUFDM0I7QUFDQSxlQUFlLG1CQUFPLENBQUMsc0JBQVE7O0FBRS9CLGNBQWMsbUJBQU8sQ0FBQyx3REFBTztBQUM3QixnQkFBZ0IsbUJBQU8sQ0FBQyxzRUFBaUI7QUFDekMsZ0JBQWdCLG1CQUFPLENBQUMsc0VBQWlCOztBQUV6QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsbUNBQW1DLDZCQUE2Qjs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1COztBQUVuQjtBQUNBLHVCQUF1Qjs7QUFFdkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvdmljdG9yd2lsc29uL0Rlc2t0b3AvcHJvamVjdHMvRVpWaXovbm9kZV9tb2R1bGVzL0B0ZWNodGVhbWVyL29jc3AvbGliL29jc3Avc2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG9jc3AgPSByZXF1aXJlKCcuLi9vY3NwJylcblxuY29uc3QgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKVxuY29uc3QgaHR0cFNlcnZlciA9IGh0dHAuU2VydmVyXG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKVxuXG5jb25zdCBhc3luYyA9IHJlcXVpcmUoJ2FzeW5jJylcbmNvbnN0IHJmYzI1NjAgPSByZXF1aXJlKCdhc24xLmpzLXJmYzI1NjAnKVxuY29uc3QgcmZjNTI4MCA9IHJlcXVpcmUoJ2FzbjEuanMtcmZjNTI4MCcpXG5cbmZ1bmN0aW9uIGhhbmRsZXIgKHJlcSwgcmVzKSB7XG4gIGlmIChyZXEubWV0aG9kICE9PSAnUE9TVCcpIHtcbiAgICByZXR1cm4gcmVzLndyaXRlSGVhZCg0MDApXG4gIH1cblxuICBpZiAocmVxLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddICE9PSAnYXBwbGljYXRpb24vb2NzcC1yZXF1ZXN0Jykge1xuICAgIHJldHVybiByZXMud3JpdGVIZWFkKDQwMClcbiAgfVxuXG4gIGNvbnN0IGNodW5rcyA9IFtdXG4gIHJlcS5vbigncmVhZGFibGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgY2h1bmsgPSByZXEucmVhZCgpXG4gICAgaWYgKGNodW5rKSB7IGNodW5rcy5wdXNoKGNodW5rKSB9XG4gIH0pXG5cbiAgZnVuY3Rpb24gZXJyUmVzIChzdGF0dXMpIHtcbiAgICByZXR1cm4gcmZjMjU2MC5PQ1NQUmVzcG9uc2UuZW5jb2RlKHtcbiAgICAgIHJlc3BvbnNlU3RhdHVzOiBzdGF0dXNcbiAgICB9LCAnZGVyJylcbiAgfVxuXG4gIGZ1bmN0aW9uIGRvbmUgKG91dCkge1xuICAgIHJlcy53cml0ZUhlYWQoMjAwLCB7XG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL29jc3AtcmVzcG9uc2UnLFxuICAgICAgJ0NvbnRlbnQtTGVuZ3RoJzogb3V0Lmxlbmd0aFxuICAgIH0pXG4gICAgcmVzLmVuZChvdXQpXG4gIH1cblxuICByZXEub24oJ2VuZCcsICgpID0+IHtcbiAgICBjb25zdCBib2R5ID0gQnVmZmVyLmNvbmNhdChjaHVua3MpXG4gICAgbGV0IG9jc3BSZXFcbiAgICB0cnkge1xuICAgICAgb2NzcFJlcSA9IHJmYzI1NjAuT0NTUFJlcXVlc3QuZGVjb2RlKGJvZHksICdkZXInKVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBkb25lKGVyclJlcygnbWFsZm9ybWVkX3JlcXVlc3QnKSlcbiAgICB9XG5cbiAgICB0aGlzLmdldFJlc3BvbnNlcyhvY3NwUmVxLCAoZXJyLCByZXNwb25zZXMpID0+IHtcbiAgICAgIC8vIEFzc3VtZSBub3QgZm91bmRcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmVzLndyaXRlSGVhZCg0MDQpXG4gICAgICAgIHJlcy5lbmQoKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRvbmUocmVzcG9uc2VzKVxuICAgIH0pXG4gIH0pXG59XG5cbmNsYXNzIFNlcnZlciBleHRlbmRzIGh0dHBTZXJ2ZXIge1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucykge1xuICAgIHN1cGVyKGhhbmRsZXIpXG5cbiAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHsgbmV4dFVwZGF0ZTogMjQgKiAzNjAwICogMWUzIH0sIG9wdGlvbnMpXG5cbiAgICB0aGlzLmtleSA9IHRoaXMub3B0aW9ucy5rZXlcbiAgICB0aGlzLmNlcnRyb290ID0gcmZjNTI4MC5DZXJ0aWZpY2F0ZS5kZWNvZGUoXG4gICAgICBvY3NwLnV0aWxzLnRvREVSKG9wdGlvbnMuY2VydCwgJ0NFUlRJRklDQVRFJyksXG4gICAgICAnZGVyJylcbiAgICB0aGlzLmNlcnQgPSB0aGlzLmNlcnRyb290LnRic0NlcnRpZmljYXRlXG5cbiAgICBjb25zdCBpc3N1ZXJOYW1lID0gcmZjNTI4MC5OYW1lLmVuY29kZSh0aGlzLmNlcnQuc3ViamVjdCwgJ2RlcicpXG4gICAgY29uc3QgaXNzdWVyS2V5ID0gdGhpcy5jZXJ0LnN1YmplY3RQdWJsaWNLZXlJbmZvLnN1YmplY3RQdWJsaWNLZXkuZGF0YVxuXG4gICAgdGhpcy5jZXJ0SUQgPSB7fVxuICAgIE9iamVjdC5rZXlzKG9jc3AudXRpbHMuZGlnZXN0UmV2KS5mb3JFYWNoKGZ1bmN0aW9uIChkaWdlc3QpIHtcbiAgICAgIHRoaXMuY2VydElEW2RpZ2VzdF0gPSB7XG4gICAgICAgIGlzc3Vlck5hbWVIYXNoOiBjcnlwdG8uY3JlYXRlSGFzaChkaWdlc3QpLnVwZGF0ZShpc3N1ZXJOYW1lKS5kaWdlc3QoKSxcbiAgICAgICAgaXNzdWVyS2V5SGFzaDogY3J5cHRvLmNyZWF0ZUhhc2goZGlnZXN0KS51cGRhdGUoaXNzdWVyS2V5KS5kaWdlc3QoKVxuICAgICAgfVxuICAgIH0sIHRoaXMpXG5cbiAgICB0aGlzLmNlcnRzID0ge31cbiAgfVxuXG4gIHN0YXRpYyBjcmVhdGUgKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFNlcnZlcihvcHRpb25zKVxuICB9XG5cbiAgYWRkQ2VydCAoc2VyaWFsLCBzdGF0dXMsIGluZm8pIHtcbiAgICB0aGlzLmNlcnRzW3NlcmlhbC50b1N0cmluZygxNildID0ge1xuICAgICAgdHlwZTogc3RhdHVzLFxuICAgICAgdmFsdWU6IGluZm9cbiAgICB9XG4gIH1cblxuICBnZXRSZXNwb25zZXMgKHJlcSwgY2IpIHtcbiAgICBjb25zdCByZXFMaXN0ID0gcmVxLnRic1JlcXVlc3QucmVxdWVzdExpc3RcblxuICAgIC8vIFRPRE8oaW5kdXRueSk6IHN1cHBvcnQgc2lnbmVkIHJlcXVlc3RzXG4gICAgYXN5bmMubWFwKHJlcUxpc3QsIChyZXEsIGNiKSA9PiB7XG4gICAgICB0aGlzLmdldFJlc3BvbnNlKHJlcSwgY2IpXG4gICAgfSwgKGVyciwgcmVzcG9uc2VzKSA9PiB7XG4gICAgICBpZiAoZXJyKSB7IHJldHVybiBjYihlcnIpIH1cblxuICAgICAgLy8gVE9ETyhpbmR1dG55KTogc2VuZCBleHRlbnNpb25zXG4gICAgICBjb25zdCBiYXNpYyA9IHtcbiAgICAgICAgdGJzUmVzcG9uc2VEYXRhOiB7XG4gICAgICAgICAgdmVyc2lvbjogJ3YxJyxcbiAgICAgICAgICByZXNwb25kZXJJRDoge1xuICAgICAgICAgICAgdHlwZTogJ2J5S2V5JyxcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLmNlcnRJRC5zaGExLmlzc3VlcktleUhhc2hcbiAgICAgICAgICB9LFxuICAgICAgICAgIHByb2R1Y2VkQXQ6IG5ldyBEYXRlKCksXG4gICAgICAgICAgcmVzcG9uc2VzXG4gICAgICAgIH0sXG5cbiAgICAgICAgc2lnbmF0dXJlQWxnb3JpdGhtOiB7XG4gICAgICAgICAgYWxnb3JpdGhtOiBvY3NwLnV0aWxzLnNpZ25SZXYuc2hhNTEyV2l0aFJTQUVuY3J5cHRpb25cbiAgICAgICAgfSxcbiAgICAgICAgc2lnbmF0dXJlOiBudWxsLFxuXG4gICAgICAgIGNlcnRzOiBbXG4gICAgICAgICAgdGhpcy5jZXJ0cm9vdFxuICAgICAgICBdXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHNpZ24gPSBjcnlwdG8uY3JlYXRlU2lnbignc2hhNTEyV2l0aFJTQUVuY3J5cHRpb24nKVxuICAgICAgc2lnbi51cGRhdGUocmZjMjU2MC5SZXNwb25zZURhdGEuZW5jb2RlKGJhc2ljLnRic1Jlc3BvbnNlRGF0YSwgJ2RlcicpKVxuICAgICAgYmFzaWMuc2lnbmF0dXJlID0ge1xuICAgICAgICB1bnVzZWQ6IDAsXG4gICAgICAgIGRhdGE6IHNpZ24uc2lnbih0aGlzLmtleSlcbiAgICAgIH1cblxuICAgICAgY29uc3QgcmVzID0ge1xuICAgICAgICByZXNwb25zZVN0YXR1czogJ3N1Y2Nlc3NmdWwnLFxuICAgICAgICByZXNwb25zZUJ5dGVzOiB7XG4gICAgICAgICAgcmVzcG9uc2VUeXBlOiAnaWQtcGtpeC1vY3NwLWJhc2ljJyxcbiAgICAgICAgICByZXNwb25zZTogcmZjMjU2MC5CYXNpY09DU1BSZXNwb25zZS5lbmNvZGUoYmFzaWMsICdkZXInKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNiKG51bGwsIHJmYzI1NjAuT0NTUFJlc3BvbnNlLmVuY29kZShyZXMsICdkZXInKSlcbiAgICB9KVxuICB9XG5cbiAgZ2V0UmVzcG9uc2UgKHJlcSwgY2IpIHtcbiAgICBjb25zdCBjZXJ0SUQgPSByZXEucmVxQ2VydFxuXG4gICAgY29uc3QgZGlnZXN0SWQgPSBjZXJ0SUQuaGFzaEFsZ29yaXRobS5hbGdvcml0aG0uam9pbignLicpXG4gICAgY29uc3QgZGlnZXN0ID0gb2NzcC51dGlscy5kaWdlc3RbZGlnZXN0SWRdXG4gICAgaWYgKCFkaWdlc3QpIHsgcmV0dXJuIGNiKG5ldyBFcnJvcignVW5rbm93biBkaWdlc3Q6ICcgKyBkaWdlc3RJZCkpIH1cblxuICAgIGNvbnN0IGV4cGVjdGVkSUQgPSB0aGlzLmNlcnRJRFtkaWdlc3RdXG4gICAgaWYgKCFleHBlY3RlZElEKSB7IHJldHVybiBjYihuZXcgRXJyb3IoJ05vIHByZS1nZW5lcmF0ZWQgQ2VydElEIGZvciBkaWdlc3Q6ICcgKyBkaWdlc3QpKSB9XG5cbiAgICBpZiAoZXhwZWN0ZWRJRC5pc3N1ZXJOYW1lSGFzaC50b1N0cmluZygnaGV4JykgIT09XG4gICAgICBjZXJ0SUQuaXNzdWVyTmFtZUhhc2gudG9TdHJpbmcoJ2hleCcpKSB7XG4gICAgICByZXR1cm4gY2IobmV3IEVycm9yKCdJc3N1ZXIgbmFtZSBtaXNtYXRjaCcpKVxuICAgIH1cblxuICAgIGlmIChleHBlY3RlZElELmlzc3VlcktleUhhc2gudG9TdHJpbmcoJ2hleCcpICE9PVxuICAgICAgY2VydElELmlzc3VlcktleUhhc2gudG9TdHJpbmcoJ2hleCcpKSB7XG4gICAgICByZXR1cm4gY2IobmV3IEVycm9yKCdJc3N1ZXIga2V5IG1pc21hdGNoJykpXG4gICAgfVxuXG4gICAgY29uc3Qgc2VyaWFsID0gY2VydElELnNlcmlhbE51bWJlci50b1N0cmluZygxNilcbiAgICBjb25zdCBjZXJ0ID0gdGhpcy5jZXJ0c1tzZXJpYWxdXG5cbiAgICBjb25zdCByZXNwb25zZSA9IHtcbiAgICAgIGNlcnRJZDogY2VydElELFxuICAgICAgY2VydFN0YXR1czogbnVsbCxcbiAgICAgIHRoaXNVcGRhdGU6IG5ldyBEYXRlKCksXG4gICAgICBuZXh0VXBkYXRlOiBuZXcgRGF0ZSgrbmV3IERhdGUoKSArIHRoaXMub3B0aW9ucy5uZXh0VXBkYXRlKVxuICAgIH1cbiAgICBpZiAoY2VydCkge1xuICAgICAgcmVzcG9uc2UuY2VydFN0YXR1cyA9IGNlcnRcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzcG9uc2UuY2VydFN0YXR1cyA9IHtcbiAgICAgICAgdHlwZTogJ3Vua25vd24nLFxuICAgICAgICB2YWx1ZTogbnVsbFxuICAgICAgfVxuICAgIH1cblxuICAgIGNiKG51bGwsIHJlc3BvbnNlKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2VydmVyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/@techteamer/ocsp/lib/ocsp/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const http = __webpack_require__(/*! http */ \"http\")\nconst asn1 = __webpack_require__(/*! asn1.js */ \"(rsc)/./node_modules/asn1.js/lib/asn1.js\")\n\nconst rfc2560 = __webpack_require__(/*! asn1.js-rfc2560 */ \"(rsc)/./node_modules/asn1.js-rfc2560/index.js\")\nconst Buffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer)\n\nexports[\"id-ad-caIssuers\"] = [1, 3, 6, 1, 5, 5, 7, 48, 2]\nexports[\"id-kp-OCSPSigning\"] = [1, 3, 6, 1, 5, 5, 7, 3, 9]\n\nexports.getResponse = function getResponse (uri, req, cb) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/ocsp-request',\n      'Content-Length': req.length\n    }\n  }\n\n  function done (err, response) {\n    if (cb) { cb(err, response) }\n    cb = null\n  }\n\n  function onResponse (response) {\n    if (response.statusCode < 200 || response.statusCode >= 400) {\n      return done(new Error('Failed to obtain OCSP response: ' + response.statusCode))\n    }\n\n    const chunks = []\n    response.on('readable', function () {\n      const chunk = response.read()\n      if (!chunk) { return }\n      chunks.push(chunk)\n    })\n\n    response.on('end', function () {\n      const ocsp = Buffer.concat(chunks)\n\n      done(null, ocsp)\n    })\n  }\n\n  http.request(uri, options, onResponse)\n    .on('error', done)\n    .end(req)\n}\n\nexports.parseResponse = function parseResponse (raw) {\n  const body = { start: 0, end: raw.length }\n  const response = rfc2560.OCSPResponse.decode(raw, 'der', {\n    track: function (key, start, end, type) {\n      if (type !== 'content' || key !== 'responseBytes/response') {\n        return\n      }\n\n      body.start = start\n      body.end = end\n    }\n  })\n\n  const status = response.responseStatus\n  if (status !== 'successful') {\n    throw new Error('Bad OCSP response status: ' + status)\n  }\n\n  // Unknown response type\n  const responseType = response.responseBytes.responseType\n  if (responseType !== 'id-pkix-ocsp-basic') {\n    throw new Error('Unknown OCSP response type: ' + responseType)\n  }\n\n  const bytes = response.responseBytes.response\n\n  const tbs = { start: body.start, end: body.end }\n  const certsTbs = []\n  const basic = rfc2560.BasicOCSPResponse.decode(bytes, 'der', {\n    track: function (key, start, end, type) {\n      if (type !== 'tagged') {\n        return\n      }\n\n      if (key === 'tbsResponseData') {\n        tbs.start = body.start + start\n        tbs.end = body.start + end\n      } else if (key === 'certs/tbsCertificate') {\n        certsTbs.push({ start: body.start + start, end: body.start + end })\n      }\n    }\n  })\n\n  const OCSPSigning = exports['id-kp-OCSPSigning'].join('.')\n  const certs = (basic.certs || []).filter(function (cert) {\n    return cert.tbsCertificate.extensions.some(function (ext) {\n      if (ext.extnID !== 'extendedKeyUsage') { return false }\n\n      return ext.extnValue.some(function (value) {\n        return value.join('.') === OCSPSigning\n      })\n    })\n  })\n\n  return {\n    start: tbs.start,\n    end: tbs.end,\n    value: basic,\n    certs,\n    certsTbs\n  }\n}\n\nexports.digest = {\n  '1.3.14.3.2.26': 'sha1',\n  '2.16.840.1.101.3.4.2.1': 'sha256'\n}\n\nexports.digestRev = {\n  sha1: '1.3.14.3.2.26',\n  sha256: '2.16.840.1.101.3.4.2.1'\n}\n\nexports.sign = {\n  '1.2.840.113549.1.1.5': 'sha1WithRSAEncryption',\n  '1.2.840.113549.1.1.4': 'md5WithRSAEncryption',\n  '1.2.840.113549.1.1.2': 'md2WithRSAEncryption', // SignatureALG HashMD2 PubKeyALG_RSA\n  '1.2.840.113549.1.1.11': 'sha256WithRSAEncryption',\n  '1.2.840.113549.1.1.12': 'sha384WithRSAEncryption',\n  '1.2.840.113549.1.1.13': 'sha512WithRSAEncryption',\n  '1.2.840.113549.1.1.14': 'sha224WithRSAEncryption',\n  '1.2.840.10040.4.3': 'dsaWithSHA1', // 'SignatureALG HashSHA1 PubKeyALG_DSA'\n  '1.2.840.10045.4.1': 'ecdsa-with-SHA1', // 'SignatureALG HashSHA1 PubKeyALG_EC'\n  '1.2.840.10045.4.3.1': 'SHA224', // 'SignatureALG HashSHA224 PubKeyALG_EC'\n  '1.2.840.10045.4.3.2': 'SHA256', // 'SignatureALG HashSHA256 PubKeyALG_EC'\n  '1.2.840.10045.4.3.3': 'SHA384', // 'SignatureALG HashSHA384 PubKeyALG_EC'\n  '1.2.840.10045.4.3.4': 'SHA512', // 'SignatureALG HashSHA512 PubKeyALG_EC'\n  '2.16.840.1.101.3.4.2.1': 'SHA256', // 'SignatureALG HashSHA256 PubKeyALG_RSAPSS'\n  '2.16.840.1.101.3.4.2.2': 'SHA384', // 'SignatureALG HashSHA384 PubKeyALG_RSAPSS'\n  '2.16.840.1.101.3.4.2.3': 'SHA512', // 'SignatureALG HashSHA512 PubKeyALG_RSAPSS'\n  '2.16.840.1.101.3.4.2.4': 'SHA224', // 'SignatureALG HashSHA224 PubKeyALG_RSAPSS'\n  '2.16.840.1.101.3.4.3.1': 'SHA224', // 'SignatureALG HashSHA224 PubKeyALG_DSA'\n  '2.16.840.1.101.3.4.3.2': 'SHA256' // 'SignatureALG HashSHA256 PubKeyALG_DSA'\n}\n\nexports.signRev = {\n  sha1WithRSAEncryption: [1, 2, 840, 113549, 1, 1, 5],\n  sha256WithRSAEncryption: [1, 2, 840, 113549, 1, 1, 11],\n  sha384WithRSAEncryption: [1, 2, 840, 113549, 1, 1, 12],\n  sha512WithRSAEncryption: [1, 2, 840, 113549, 1, 1, 13]\n}\n\nexports.toPEM = function toPEM (buf, label) {\n  const p = buf.toString('base64')\n  const out = ['-----BEGIN ' + label + '-----']\n  for (let i = 0; i < p.length; i += 64) { out.push(p.slice(i, i + 64)) }\n  out.push('-----END ' + label + '-----')\n  return out.join('\\n')\n}\n\nexports.toDER = function toDER (raw, what) {\n  let der = raw.toString().match(new RegExp('-----BEGIN ' + what + '-----([^-]*)-----END ' + what + '-----'))\n\n  if (der) {\n    der = Buffer.from(der[1].replace(/[\\r\\n]/g, ''), 'base64')\n  } else if (typeof raw === 'string') {\n    der = Buffer.from(raw)\n  } else {\n    der = raw\n  }\n\n  return der\n}\n\nexports.getAuthorityInfo = function getAuthorityInfo (cert, key, done) {\n  let exts = cert.tbsCertificate.extensions\n  if (!exts) { exts = [] }\n\n  const infoAccess = exts.filter(function (ext) {\n    return ext.extnID === 'authorityInformationAccess'\n  })\n\n  if (infoAccess.length === 0) { return done(new Error('AuthorityInfoAccess not found in extensions')) }\n\n  let res = null\n  const found = infoAccess.some(function (info) {\n    const ext = info.extnValue\n\n    return ext.some(function (ad) {\n      if (ad.accessMethod.join('.') !== key) { return false }\n\n      const loc = ad.accessLocation\n      if (loc.type !== 'uniformResourceIdentifier') { return false }\n\n      res = loc.value + ''\n\n      return true\n    })\n  })\n\n  if (!found) { return done(new Error(key + ' not found in AuthorityInfoAccess')) }\n\n  return done(null, res)\n}\n\nconst RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/verify.js":
/*!**********************************************************!*\
  !*** ./node_modules/@techteamer/ocsp/lib/ocsp/verify.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ocsp = __webpack_require__(/*! ../ocsp */ \"(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp.js\")\nconst rfc5280 = __webpack_require__(/*! asn1.js-rfc5280 */ \"(rsc)/./node_modules/asn1.js-rfc5280/index.js\")\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\")\n\n// TODO(indutny): verify issuer, etc...\nfunction findResponder (issuer, certs, raws) {\n  let issuerKey = issuer.tbsCertificate.subjectPublicKeyInfo\n  issuerKey = ocsp.utils.toPEM(\n    rfc5280.SubjectPublicKeyInfo.encode(issuerKey, 'der'), 'PUBLIC KEY')\n\n  if (certs.length) {\n    const cert = certs[0]\n    const signAlg = ocsp.utils.sign[cert.signatureAlgorithm.algorithm.join('.')]\n    if (!signAlg) {\n      throw new Error('Unknown signature algorithm ' + cert.signatureAlgorithm.algorithm)\n    }\n\n    const verify = crypto.createVerify(signAlg)\n\n    verify.update(raws[0])\n    if (!verify.verify(issuerKey, cert.signature.data)) {\n      throw new Error('Invalid signature')\n    }\n\n    let certKey = cert.tbsCertificate.subjectPublicKeyInfo\n    certKey = ocsp.utils.toPEM(rfc5280.SubjectPublicKeyInfo.encode(certKey, 'der'), 'PUBLIC KEY')\n\n    return certKey\n  }\n\n  return issuerKey\n}\n\nmodule.exports = function verify (options, cb) {\n  function done (err, res) {\n    process.nextTick(() => { cb(err, res) })\n  }\n\n  try {\n    const req = options.request\n\n    const issuer = req.issuer || rfc5280.Certificate.decode(ocsp.utils.toDER(options.issuer, 'CERTIFICATE'), 'der')\n    let res = ocsp.utils.parseResponse(options.response)\n\n    const rawTBS = options.response.slice(res.start, res.end)\n    const certs = res.certs\n    const raws = res.certsTbs.map((tbs) => { return options.response.slice(tbs.start, tbs.end) })\n    res = res.value\n\n    // Verify signature using CAs Public Key\n    const signAlg = ocsp.utils.sign[res.signatureAlgorithm.algorithm.join('.')]\n    if (!signAlg) {\n      done(new Error('Unknown signature algorithm ' + res.signatureAlgorithm.algorithm), res)\n      return\n    }\n\n    const responderKey = findResponder(issuer, certs, raws)\n\n    const verify = crypto.createVerify(signAlg)\n    const tbs = res.tbsResponseData\n    const signature = res.signature.data\n\n    verify.update(rawTBS)\n    if (!verify.verify(responderKey, signature)) { return done(new Error('Invalid signature'), res) }\n\n    if (tbs.responses.length < 1) { return done(new Error('Expected at least one response')) }\n\n    res = tbs.responses[0]\n\n    // Verify CertID\n    // XXX(indutny): verify parameters\n    if (res.certId.hashAlgorithm.algorithm.join('.') !== req.certID.hashAlgorithm.algorithm.join('.')) {\n      return done(new Error('Hash algorithm mismatch'), res)\n    }\n\n    if (res.certId.issuerNameHash.toString('hex') !== req.certID.issuerNameHash.toString('hex')) {\n      return done(new Error('Issuer name hash mismatch'), res)\n    }\n\n    if (res.certId.issuerKeyHash.toString('hex') !== req.certID.issuerKeyHash.toString('hex')) {\n      return done(new Error('Issuer key hash mismatch'), res)\n    }\n\n    if (res.certId.serialNumber.cmp(req.certID.serialNumber) !== 0) {\n      return done(new Error('Serial number mismatch'), res)\n    }\n\n    if (res.certStatus.type !== 'good') {\n      return done(new Error('OCSP Status: ' + res.certStatus.type), res)\n    }\n\n    const now = +new Date()\n    const nudge = options.nudge || 60000\n    if (res.thisUpdate - nudge > now || res.nextUpdate + nudge < now) {\n      return done(new Error('OCSP Response expired'), res)\n    }\n\n    return done(null, res)\n  } catch (e) {\n    return done(e)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRlY2h0ZWFtZXIvb2NzcC9saWIvb2NzcC92ZXJpZnkuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLGtFQUFTO0FBQzlCLGdCQUFnQixtQkFBTyxDQUFDLHNFQUFpQjtBQUN6QyxlQUFlLG1CQUFPLENBQUMsc0JBQVE7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsY0FBYztBQUMzQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZDQUE2QyxtREFBbUQ7QUFDaEc7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1EQUFtRDs7QUFFbkQsb0NBQW9DOztBQUVwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3ZpY3RvcndpbHNvbi9EZXNrdG9wL3Byb2plY3RzL0VaVml6L25vZGVfbW9kdWxlcy9AdGVjaHRlYW1lci9vY3NwL2xpYi9vY3NwL3ZlcmlmeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBvY3NwID0gcmVxdWlyZSgnLi4vb2NzcCcpXG5jb25zdCByZmM1MjgwID0gcmVxdWlyZSgnYXNuMS5qcy1yZmM1MjgwJylcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpXG5cbi8vIFRPRE8oaW5kdXRueSk6IHZlcmlmeSBpc3N1ZXIsIGV0Yy4uLlxuZnVuY3Rpb24gZmluZFJlc3BvbmRlciAoaXNzdWVyLCBjZXJ0cywgcmF3cykge1xuICBsZXQgaXNzdWVyS2V5ID0gaXNzdWVyLnRic0NlcnRpZmljYXRlLnN1YmplY3RQdWJsaWNLZXlJbmZvXG4gIGlzc3VlcktleSA9IG9jc3AudXRpbHMudG9QRU0oXG4gICAgcmZjNTI4MC5TdWJqZWN0UHVibGljS2V5SW5mby5lbmNvZGUoaXNzdWVyS2V5LCAnZGVyJyksICdQVUJMSUMgS0VZJylcblxuICBpZiAoY2VydHMubGVuZ3RoKSB7XG4gICAgY29uc3QgY2VydCA9IGNlcnRzWzBdXG4gICAgY29uc3Qgc2lnbkFsZyA9IG9jc3AudXRpbHMuc2lnbltjZXJ0LnNpZ25hdHVyZUFsZ29yaXRobS5hbGdvcml0aG0uam9pbignLicpXVxuICAgIGlmICghc2lnbkFsZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHNpZ25hdHVyZSBhbGdvcml0aG0gJyArIGNlcnQuc2lnbmF0dXJlQWxnb3JpdGhtLmFsZ29yaXRobSlcbiAgICB9XG5cbiAgICBjb25zdCB2ZXJpZnkgPSBjcnlwdG8uY3JlYXRlVmVyaWZ5KHNpZ25BbGcpXG5cbiAgICB2ZXJpZnkudXBkYXRlKHJhd3NbMF0pXG4gICAgaWYgKCF2ZXJpZnkudmVyaWZ5KGlzc3VlcktleSwgY2VydC5zaWduYXR1cmUuZGF0YSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzaWduYXR1cmUnKVxuICAgIH1cblxuICAgIGxldCBjZXJ0S2V5ID0gY2VydC50YnNDZXJ0aWZpY2F0ZS5zdWJqZWN0UHVibGljS2V5SW5mb1xuICAgIGNlcnRLZXkgPSBvY3NwLnV0aWxzLnRvUEVNKHJmYzUyODAuU3ViamVjdFB1YmxpY0tleUluZm8uZW5jb2RlKGNlcnRLZXksICdkZXInKSwgJ1BVQkxJQyBLRVknKVxuXG4gICAgcmV0dXJuIGNlcnRLZXlcbiAgfVxuXG4gIHJldHVybiBpc3N1ZXJLZXlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB2ZXJpZnkgKG9wdGlvbnMsIGNiKSB7XG4gIGZ1bmN0aW9uIGRvbmUgKGVyciwgcmVzKSB7XG4gICAgcHJvY2Vzcy5uZXh0VGljaygoKSA9PiB7IGNiKGVyciwgcmVzKSB9KVxuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCByZXEgPSBvcHRpb25zLnJlcXVlc3RcblxuICAgIGNvbnN0IGlzc3VlciA9IHJlcS5pc3N1ZXIgfHwgcmZjNTI4MC5DZXJ0aWZpY2F0ZS5kZWNvZGUob2NzcC51dGlscy50b0RFUihvcHRpb25zLmlzc3VlciwgJ0NFUlRJRklDQVRFJyksICdkZXInKVxuICAgIGxldCByZXMgPSBvY3NwLnV0aWxzLnBhcnNlUmVzcG9uc2Uob3B0aW9ucy5yZXNwb25zZSlcblxuICAgIGNvbnN0IHJhd1RCUyA9IG9wdGlvbnMucmVzcG9uc2Uuc2xpY2UocmVzLnN0YXJ0LCByZXMuZW5kKVxuICAgIGNvbnN0IGNlcnRzID0gcmVzLmNlcnRzXG4gICAgY29uc3QgcmF3cyA9IHJlcy5jZXJ0c1Ricy5tYXAoKHRicykgPT4geyByZXR1cm4gb3B0aW9ucy5yZXNwb25zZS5zbGljZSh0YnMuc3RhcnQsIHRicy5lbmQpIH0pXG4gICAgcmVzID0gcmVzLnZhbHVlXG5cbiAgICAvLyBWZXJpZnkgc2lnbmF0dXJlIHVzaW5nIENBcyBQdWJsaWMgS2V5XG4gICAgY29uc3Qgc2lnbkFsZyA9IG9jc3AudXRpbHMuc2lnbltyZXMuc2lnbmF0dXJlQWxnb3JpdGhtLmFsZ29yaXRobS5qb2luKCcuJyldXG4gICAgaWYgKCFzaWduQWxnKSB7XG4gICAgICBkb25lKG5ldyBFcnJvcignVW5rbm93biBzaWduYXR1cmUgYWxnb3JpdGhtICcgKyByZXMuc2lnbmF0dXJlQWxnb3JpdGhtLmFsZ29yaXRobSksIHJlcylcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IHJlc3BvbmRlcktleSA9IGZpbmRSZXNwb25kZXIoaXNzdWVyLCBjZXJ0cywgcmF3cylcblxuICAgIGNvbnN0IHZlcmlmeSA9IGNyeXB0by5jcmVhdGVWZXJpZnkoc2lnbkFsZylcbiAgICBjb25zdCB0YnMgPSByZXMudGJzUmVzcG9uc2VEYXRhXG4gICAgY29uc3Qgc2lnbmF0dXJlID0gcmVzLnNpZ25hdHVyZS5kYXRhXG5cbiAgICB2ZXJpZnkudXBkYXRlKHJhd1RCUylcbiAgICBpZiAoIXZlcmlmeS52ZXJpZnkocmVzcG9uZGVyS2V5LCBzaWduYXR1cmUpKSB7IHJldHVybiBkb25lKG5ldyBFcnJvcignSW52YWxpZCBzaWduYXR1cmUnKSwgcmVzKSB9XG5cbiAgICBpZiAodGJzLnJlc3BvbnNlcy5sZW5ndGggPCAxKSB7IHJldHVybiBkb25lKG5ldyBFcnJvcignRXhwZWN0ZWQgYXQgbGVhc3Qgb25lIHJlc3BvbnNlJykpIH1cblxuICAgIHJlcyA9IHRicy5yZXNwb25zZXNbMF1cblxuICAgIC8vIFZlcmlmeSBDZXJ0SURcbiAgICAvLyBYWFgoaW5kdXRueSk6IHZlcmlmeSBwYXJhbWV0ZXJzXG4gICAgaWYgKHJlcy5jZXJ0SWQuaGFzaEFsZ29yaXRobS5hbGdvcml0aG0uam9pbignLicpICE9PSByZXEuY2VydElELmhhc2hBbGdvcml0aG0uYWxnb3JpdGhtLmpvaW4oJy4nKSkge1xuICAgICAgcmV0dXJuIGRvbmUobmV3IEVycm9yKCdIYXNoIGFsZ29yaXRobSBtaXNtYXRjaCcpLCByZXMpXG4gICAgfVxuXG4gICAgaWYgKHJlcy5jZXJ0SWQuaXNzdWVyTmFtZUhhc2gudG9TdHJpbmcoJ2hleCcpICE9PSByZXEuY2VydElELmlzc3Vlck5hbWVIYXNoLnRvU3RyaW5nKCdoZXgnKSkge1xuICAgICAgcmV0dXJuIGRvbmUobmV3IEVycm9yKCdJc3N1ZXIgbmFtZSBoYXNoIG1pc21hdGNoJyksIHJlcylcbiAgICB9XG5cbiAgICBpZiAocmVzLmNlcnRJZC5pc3N1ZXJLZXlIYXNoLnRvU3RyaW5nKCdoZXgnKSAhPT0gcmVxLmNlcnRJRC5pc3N1ZXJLZXlIYXNoLnRvU3RyaW5nKCdoZXgnKSkge1xuICAgICAgcmV0dXJuIGRvbmUobmV3IEVycm9yKCdJc3N1ZXIga2V5IGhhc2ggbWlzbWF0Y2gnKSwgcmVzKVxuICAgIH1cblxuICAgIGlmIChyZXMuY2VydElkLnNlcmlhbE51bWJlci5jbXAocmVxLmNlcnRJRC5zZXJpYWxOdW1iZXIpICE9PSAwKSB7XG4gICAgICByZXR1cm4gZG9uZShuZXcgRXJyb3IoJ1NlcmlhbCBudW1iZXIgbWlzbWF0Y2gnKSwgcmVzKVxuICAgIH1cblxuICAgIGlmIChyZXMuY2VydFN0YXR1cy50eXBlICE9PSAnZ29vZCcpIHtcbiAgICAgIHJldHVybiBkb25lKG5ldyBFcnJvcignT0NTUCBTdGF0dXM6ICcgKyByZXMuY2VydFN0YXR1cy50eXBlKSwgcmVzKVxuICAgIH1cblxuICAgIGNvbnN0IG5vdyA9ICtuZXcgRGF0ZSgpXG4gICAgY29uc3QgbnVkZ2UgPSBvcHRpb25zLm51ZGdlIHx8IDYwMDAwXG4gICAgaWYgKHJlcy50aGlzVXBkYXRlIC0gbnVkZ2UgPiBub3cgfHwgcmVzLm5leHRVcGRhdGUgKyBudWRnZSA8IG5vdykge1xuICAgICAgcmV0dXJuIGRvbmUobmV3IEVycm9yKCdPQ1NQIFJlc3BvbnNlIGV4cGlyZWQnKSwgcmVzKVxuICAgIH1cblxuICAgIHJldHVybiBkb25lKG51bGwsIHJlcylcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBkb25lKGUpXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@techteamer/ocsp/lib/ocsp/verify.js\n");

/***/ })

};
;