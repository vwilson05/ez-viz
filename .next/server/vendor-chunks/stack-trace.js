/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/stack-trace";
exports.ids = ["vendor-chunks/stack-trace"];
exports.modules = {

/***/ "(rsc)/./node_modules/stack-trace/lib/stack-trace.js":
/*!*****************************************************!*\
  !*** ./node_modules/stack-trace/lib/stack-trace.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.get = function(belowFn) {\n  var oldLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n\n  var dummyObject = {};\n\n  var v8Handler = Error.prepareStackTrace;\n  Error.prepareStackTrace = function(dummyObject, v8StackTrace) {\n    return v8StackTrace;\n  };\n  Error.captureStackTrace(dummyObject, belowFn || exports.get);\n\n  var v8StackTrace = dummyObject.stack;\n  Error.prepareStackTrace = v8Handler;\n  Error.stackTraceLimit = oldLimit;\n\n  return v8StackTrace;\n};\n\nexports.parse = function(err) {\n  if (!err.stack) {\n    return [];\n  }\n\n  var self = this;\n  var lines = err.stack.split('\\n').slice(1);\n\n  return lines\n    .map(function(line) {\n      if (line.match(/^\\s*[-]{4,}$/)) {\n        return self._createParsedCallSite({\n          fileName: line,\n          lineNumber: null,\n          functionName: null,\n          typeName: null,\n          methodName: null,\n          columnNumber: null,\n          'native': null,\n        });\n      }\n\n      var lineMatch = line.match(/at (?:(.+)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n      if (!lineMatch) {\n        return;\n      }\n\n      var object = null;\n      var method = null;\n      var functionName = null;\n      var typeName = null;\n      var methodName = null;\n      var isNative = (lineMatch[5] === 'native');\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n        var methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart-1] == '.')\n          methodStart--;\n        if (methodStart > 0) {\n          object = functionName.substr(0, methodStart);\n          method = functionName.substr(methodStart + 1);\n          var objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.substr(objectEnd + 1);\n            object = object.substr(0, objectEnd);\n          }\n        }\n        typeName = null;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = null;\n        functionName = null;\n      }\n\n      var properties = {\n        fileName: lineMatch[2] || null,\n        lineNumber: parseInt(lineMatch[3], 10) || null,\n        functionName: functionName,\n        typeName: typeName,\n        methodName: methodName,\n        columnNumber: parseInt(lineMatch[4], 10) || null,\n        'native': isNative,\n      };\n\n      return self._createParsedCallSite(properties);\n    })\n    .filter(function(callSite) {\n      return !!callSite;\n    });\n};\n\nfunction CallSite(properties) {\n  for (var property in properties) {\n    this[property] = properties[property];\n  }\n}\n\nvar strProperties = [\n  'this',\n  'typeName',\n  'functionName',\n  'methodName',\n  'fileName',\n  'lineNumber',\n  'columnNumber',\n  'function',\n  'evalOrigin'\n];\nvar boolProperties = [\n  'topLevel',\n  'eval',\n  'native',\n  'constructor'\n];\nstrProperties.forEach(function (property) {\n  CallSite.prototype[property] = null;\n  CallSite.prototype['get' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\nboolProperties.forEach(function (property) {\n  CallSite.prototype[property] = false;\n  CallSite.prototype['is' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\n\nexports._createParsedCallSite = function(properties) {\n  return new CallSite(properties);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc3RhY2stdHJhY2UvbGliL3N0YWNrLXRyYWNlLmpzIiwibWFwcGluZ3MiOiJBQUFBLFdBQVc7QUFDWDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw4QkFBOEIsR0FBRztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELDZCQUE2QjtBQUM3QjtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdmljdG9yd2lsc29uL0Rlc2t0b3AvcHJvamVjdHMvRVpWaXovbm9kZV9tb2R1bGVzL3N0YWNrLXRyYWNlL2xpYi9zdGFjay10cmFjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLmdldCA9IGZ1bmN0aW9uKGJlbG93Rm4pIHtcbiAgdmFyIG9sZExpbWl0ID0gRXJyb3Iuc3RhY2tUcmFjZUxpbWl0O1xuICBFcnJvci5zdGFja1RyYWNlTGltaXQgPSBJbmZpbml0eTtcblxuICB2YXIgZHVtbXlPYmplY3QgPSB7fTtcblxuICB2YXIgdjhIYW5kbGVyID0gRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7XG4gIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gZnVuY3Rpb24oZHVtbXlPYmplY3QsIHY4U3RhY2tUcmFjZSkge1xuICAgIHJldHVybiB2OFN0YWNrVHJhY2U7XG4gIH07XG4gIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKGR1bW15T2JqZWN0LCBiZWxvd0ZuIHx8IGV4cG9ydHMuZ2V0KTtcblxuICB2YXIgdjhTdGFja1RyYWNlID0gZHVtbXlPYmplY3Quc3RhY2s7XG4gIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gdjhIYW5kbGVyO1xuICBFcnJvci5zdGFja1RyYWNlTGltaXQgPSBvbGRMaW1pdDtcblxuICByZXR1cm4gdjhTdGFja1RyYWNlO1xufTtcblxuZXhwb3J0cy5wYXJzZSA9IGZ1bmN0aW9uKGVycikge1xuICBpZiAoIWVyci5zdGFjaykge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGxpbmVzID0gZXJyLnN0YWNrLnNwbGl0KCdcXG4nKS5zbGljZSgxKTtcblxuICByZXR1cm4gbGluZXNcbiAgICAubWFwKGZ1bmN0aW9uKGxpbmUpIHtcbiAgICAgIGlmIChsaW5lLm1hdGNoKC9eXFxzKlstXXs0LH0kLykpIHtcbiAgICAgICAgcmV0dXJuIHNlbGYuX2NyZWF0ZVBhcnNlZENhbGxTaXRlKHtcbiAgICAgICAgICBmaWxlTmFtZTogbGluZSxcbiAgICAgICAgICBsaW5lTnVtYmVyOiBudWxsLFxuICAgICAgICAgIGZ1bmN0aW9uTmFtZTogbnVsbCxcbiAgICAgICAgICB0eXBlTmFtZTogbnVsbCxcbiAgICAgICAgICBtZXRob2ROYW1lOiBudWxsLFxuICAgICAgICAgIGNvbHVtbk51bWJlcjogbnVsbCxcbiAgICAgICAgICAnbmF0aXZlJzogbnVsbCxcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBsaW5lTWF0Y2ggPSBsaW5lLm1hdGNoKC9hdCAoPzooLispXFxzK1xcKCk/KD86KC4rPyk6KFxcZCspKD86OihcXGQrKSk/fChbXildKykpXFwpPy8pO1xuICAgICAgaWYgKCFsaW5lTWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JqZWN0ID0gbnVsbDtcbiAgICAgIHZhciBtZXRob2QgPSBudWxsO1xuICAgICAgdmFyIGZ1bmN0aW9uTmFtZSA9IG51bGw7XG4gICAgICB2YXIgdHlwZU5hbWUgPSBudWxsO1xuICAgICAgdmFyIG1ldGhvZE5hbWUgPSBudWxsO1xuICAgICAgdmFyIGlzTmF0aXZlID0gKGxpbmVNYXRjaFs1XSA9PT0gJ25hdGl2ZScpO1xuXG4gICAgICBpZiAobGluZU1hdGNoWzFdKSB7XG4gICAgICAgIGZ1bmN0aW9uTmFtZSA9IGxpbmVNYXRjaFsxXTtcbiAgICAgICAgdmFyIG1ldGhvZFN0YXJ0ID0gZnVuY3Rpb25OYW1lLmxhc3RJbmRleE9mKCcuJyk7XG4gICAgICAgIGlmIChmdW5jdGlvbk5hbWVbbWV0aG9kU3RhcnQtMV0gPT0gJy4nKVxuICAgICAgICAgIG1ldGhvZFN0YXJ0LS07XG4gICAgICAgIGlmIChtZXRob2RTdGFydCA+IDApIHtcbiAgICAgICAgICBvYmplY3QgPSBmdW5jdGlvbk5hbWUuc3Vic3RyKDAsIG1ldGhvZFN0YXJ0KTtcbiAgICAgICAgICBtZXRob2QgPSBmdW5jdGlvbk5hbWUuc3Vic3RyKG1ldGhvZFN0YXJ0ICsgMSk7XG4gICAgICAgICAgdmFyIG9iamVjdEVuZCA9IG9iamVjdC5pbmRleE9mKCcuTW9kdWxlJyk7XG4gICAgICAgICAgaWYgKG9iamVjdEVuZCA+IDApIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uTmFtZSA9IGZ1bmN0aW9uTmFtZS5zdWJzdHIob2JqZWN0RW5kICsgMSk7XG4gICAgICAgICAgICBvYmplY3QgPSBvYmplY3Quc3Vic3RyKDAsIG9iamVjdEVuZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHR5cGVOYW1lID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgaWYgKG1ldGhvZCkge1xuICAgICAgICB0eXBlTmFtZSA9IG9iamVjdDtcbiAgICAgICAgbWV0aG9kTmFtZSA9IG1ldGhvZDtcbiAgICAgIH1cblxuICAgICAgaWYgKG1ldGhvZCA9PT0gJzxhbm9ueW1vdXM+Jykge1xuICAgICAgICBtZXRob2ROYW1lID0gbnVsbDtcbiAgICAgICAgZnVuY3Rpb25OYW1lID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdmFyIHByb3BlcnRpZXMgPSB7XG4gICAgICAgIGZpbGVOYW1lOiBsaW5lTWF0Y2hbMl0gfHwgbnVsbCxcbiAgICAgICAgbGluZU51bWJlcjogcGFyc2VJbnQobGluZU1hdGNoWzNdLCAxMCkgfHwgbnVsbCxcbiAgICAgICAgZnVuY3Rpb25OYW1lOiBmdW5jdGlvbk5hbWUsXG4gICAgICAgIHR5cGVOYW1lOiB0eXBlTmFtZSxcbiAgICAgICAgbWV0aG9kTmFtZTogbWV0aG9kTmFtZSxcbiAgICAgICAgY29sdW1uTnVtYmVyOiBwYXJzZUludChsaW5lTWF0Y2hbNF0sIDEwKSB8fCBudWxsLFxuICAgICAgICAnbmF0aXZlJzogaXNOYXRpdmUsXG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gc2VsZi5fY3JlYXRlUGFyc2VkQ2FsbFNpdGUocHJvcGVydGllcyk7XG4gICAgfSlcbiAgICAuZmlsdGVyKGZ1bmN0aW9uKGNhbGxTaXRlKSB7XG4gICAgICByZXR1cm4gISFjYWxsU2l0ZTtcbiAgICB9KTtcbn07XG5cbmZ1bmN0aW9uIENhbGxTaXRlKHByb3BlcnRpZXMpIHtcbiAgZm9yICh2YXIgcHJvcGVydHkgaW4gcHJvcGVydGllcykge1xuICAgIHRoaXNbcHJvcGVydHldID0gcHJvcGVydGllc1twcm9wZXJ0eV07XG4gIH1cbn1cblxudmFyIHN0clByb3BlcnRpZXMgPSBbXG4gICd0aGlzJyxcbiAgJ3R5cGVOYW1lJyxcbiAgJ2Z1bmN0aW9uTmFtZScsXG4gICdtZXRob2ROYW1lJyxcbiAgJ2ZpbGVOYW1lJyxcbiAgJ2xpbmVOdW1iZXInLFxuICAnY29sdW1uTnVtYmVyJyxcbiAgJ2Z1bmN0aW9uJyxcbiAgJ2V2YWxPcmlnaW4nXG5dO1xudmFyIGJvb2xQcm9wZXJ0aWVzID0gW1xuICAndG9wTGV2ZWwnLFxuICAnZXZhbCcsXG4gICduYXRpdmUnLFxuICAnY29uc3RydWN0b3InXG5dO1xuc3RyUHJvcGVydGllcy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICBDYWxsU2l0ZS5wcm90b3R5cGVbcHJvcGVydHldID0gbnVsbDtcbiAgQ2FsbFNpdGUucHJvdG90eXBlWydnZXQnICsgcHJvcGVydHlbMF0udG9VcHBlckNhc2UoKSArIHByb3BlcnR5LnN1YnN0cigxKV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXNbcHJvcGVydHldO1xuICB9XG59KTtcbmJvb2xQcm9wZXJ0aWVzLmZvckVhY2goZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gIENhbGxTaXRlLnByb3RvdHlwZVtwcm9wZXJ0eV0gPSBmYWxzZTtcbiAgQ2FsbFNpdGUucHJvdG90eXBlWydpcycgKyBwcm9wZXJ0eVswXS50b1VwcGVyQ2FzZSgpICsgcHJvcGVydHkuc3Vic3RyKDEpXSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpc1twcm9wZXJ0eV07XG4gIH1cbn0pO1xuXG5leHBvcnRzLl9jcmVhdGVQYXJzZWRDYWxsU2l0ZSA9IGZ1bmN0aW9uKHByb3BlcnRpZXMpIHtcbiAgcmV0dXJuIG5ldyBDYWxsU2l0ZShwcm9wZXJ0aWVzKTtcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/stack-trace/lib/stack-trace.js\n");

/***/ })

};
;